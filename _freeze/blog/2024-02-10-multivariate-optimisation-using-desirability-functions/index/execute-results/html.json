{
  "hash": "55147765af6e4cd477baf1a40914be28",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Multivariate Optimisation Using Desirability Functions\"\nsubtitle: \"Using the {desirability2} package to optimise across multiple variables\"\nauthor: Paul Johnson\ndate: \"2024-02-10\"\nimage: math.jpg\ncategories:\n    - Optimisation\n    - Football Analytics\n    - Data Science\n    - R\n    - Tidymodels\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# import packages\nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(worldfootballR)\n  library(desirability2)\n})\n\n# get raw data\nstandard_stats <-\n  fb_big5_advanced_season_stats(\n    season_end_year = 2023,\n    stat_type = \"standard\",\n    team_or_player = \"player\"\n  ) |>\n  janitor::clean_names(\n    replace = c(\n      \"_Playing\" = \"\",\n      \"_Expected\" = \"\",\n      \"_Progression\" = \"\",\n      \"PK\" = \"pk\",\n      \"PKatt\" = \"pk_att\",\n      \"xG\" = \"xg\",\n      \"xAG\" = \"xag\",\n      \"_Per_90\" = \"90\",\n      \"_Per\" = \"90\"\n    )\n  ) |>\n  mutate(\n    across(\n      starts_with(\"prg\"), ~ round(.x/mins90, 2), \n      .names = \"{.col}90\"\n      ),\n    position = stringr::str_split_i(pos, pattern = \",\", i = 1)\n    ) |> \n  select(player, position, squad, comp, ends_with(\"90\"))\n\nshooting_stats <-\n  fb_big5_advanced_season_stats(\n    season_end_year = 2023,\n    stat_type = \"shooting\",\n    team_or_player = \"player\"\n    ) |> \n  janitor::clean_names(replace = c(\"_Standard\" = \"\", \"_per_90\" = \"90\")) |>\n  select(player, squad, sh90, dist)\n\ngca_stats <-\n  fb_big5_advanced_season_stats(\n    season_end_year = 2023, \n    stat_type = \"gca\", \n    team_or_player = \"player\"\n  ) |>\n  janitor::clean_names(replace = c(\"_SCA\" = \"\")) |> \n  select(player, squad, sca90)\n\n# join full dataset\nbig_five_stats <-\n  standard_stats |> \n  full_join(shooting_stats) |> \n  full_join(gca_stats) |> \n  tibble() |> \n  tidyr::drop_na() |> \n  filter(mins90 > 10) |> \n  rename(team = squad, league = comp)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(player, squad)`\nJoining with `by = join_by(player, squad)`\n```\n\n\n:::\n:::\n\n\n# Ball Progression\n\nI'm not particularly sure how to weight the different measures of ball progression. It seems reasonable to weight progressive passes and carries equally, but should progressive receptions also be given equal weight? Maybe? I could see an argument for and against this, and I think any decision that is not weighting variables equally should be done based on a solid theoretical basis. Given the absence of anything like that, I'll treat them equally in this instance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nball_progression <- \n  big_five_stats |>\n  mutate(\n    across(\n      starts_with(\"prg\"),\n      ~ d_max(.x, use_data = TRUE),\n      .names = \"d_{.col}\"\n      ),\n    d_prg = d_overall(across(starts_with(\"d_\")))\n  ) |> \n  select(player, position, team, league, starts_with(\"prg\"), starts_with(\"d_\")) |> \n  arrange(desc(d_prg))\n\nball_progression |> \n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 11\n   player              position team            league       prg_c90 prg_p90 prg_r90 d_prg_c90 d_prg_p90 d_prg_r90 d_prg\n   <chr>               <chr>    <chr>           <chr>          <dbl>   <dbl>   <dbl>     <dbl>     <dbl>     <dbl> <dbl>\n 1 Rayan Cherki        MF       Lyon            Ligue 1         6.39    6.92   12.5      0.809     0.518     0.663 0.653\n 2 Kingsley Coman      FW       Bayern Munich   Bundesliga      6.24    4.46   18.8      0.790     0.334     1     0.641\n 3 Ousmane Dembélé     FW       Barcelona       La Liga         7.9     4.71   13.3      1         0.353     0.706 0.629\n 4 Edon Zhegrova       FW       Lille           Ligue 1         6.32    4.44   16.6      0.8       0.333     0.880 0.616\n 5 Jeremy Doku         MF       Rennes          Ligue 1         7.06    4.97   10.9      0.894     0.372     0.579 0.577\n 6 Jack Grealish       FW       Manchester City Premier Lea…    6.27    4.39   13.6      0.794     0.329     0.721 0.573\n 7 Allan Saint-Maximin FW       Newcastle Utd   Premier Lea…    7.5     5.56    8.95     0.949     0.416     0.475 0.573\n 8 Matteo Politano     FW       Napoli          Serie A         6.23    5.54   10.6      0.789     0.415     0.563 0.569\n 9 João Cancelo        DF       Manchester City Premier Lea…    5.14    7.46    8.8      0.651     0.559     0.467 0.554\n10 Kylian Mbappé       FW       Paris S-G       Ligue 1         5.27    4.09   15.0      0.667     0.306     0.793 0.545\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nball_progression |> \n  summarise(across(starts_with(\"d_\"), mean), .by = league) |> \n  arrange(desc(d_prg))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n  league         d_prg_c90 d_prg_p90 d_prg_r90 d_prg\n  <chr>              <dbl>     <dbl>     <dbl> <dbl>\n1 Ligue 1            0.233     0.311     0.226 0.225\n2 La Liga            0.223     0.279     0.197 0.203\n3 Serie A            0.220     0.270     0.196 0.203\n4 Premier League     0.216     0.278     0.199 0.202\n5 Bundesliga         0.189     0.263     0.191 0.188\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nball_progression |> \n  summarise(across(starts_with(\"d_\"), mean), .by = team) |> \n  arrange(desc(d_prg))  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 98 × 5\n   team            d_prg_c90 d_prg_p90 d_prg_r90 d_prg\n   <chr>               <dbl>     <dbl>     <dbl> <dbl>\n 1 Bayern Munich       0.339     0.400     0.339 0.324\n 2 Manchester City     0.339     0.415     0.295 0.311\n 3 Barcelona           0.333     0.419     0.309 0.309\n 4 Lille               0.295     0.406     0.303 0.297\n 5 Real Madrid         0.323     0.410     0.277 0.296\n 6 Arsenal             0.292     0.389     0.311 0.287\n 7 Paris S-G           0.272     0.380     0.301 0.285\n 8 Marseille           0.270     0.378     0.276 0.285\n 9 Napoli              0.322     0.351     0.275 0.279\n10 Liverpool           0.247     0.400     0.277 0.267\n# ℹ 88 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nball_progression |> \n  summarise(across(starts_with(\"d_\"), mean), .by = position) |> \n  arrange(desc(d_prg_c90))  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  position d_prg_c90 d_prg_p90 d_prg_r90 d_prg\n  <chr>        <dbl>     <dbl>     <dbl> <dbl>\n1 FW        0.296      0.195       0.378 0.268\n2 MF        0.220      0.362       0.177 0.223\n3 DF        0.173      0.269       0.125 0.157\n4 GK        0.000475   0.00946     0     0    \n```\n\n\n:::\n\n```{.r .cell-code}\nball_progression |> \n  summarise(across(starts_with(\"d_\"), mean), .by = position) |> \n  arrange(desc(d_prg_p90))  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  position d_prg_c90 d_prg_p90 d_prg_r90 d_prg\n  <chr>        <dbl>     <dbl>     <dbl> <dbl>\n1 MF        0.220      0.362       0.177 0.223\n2 DF        0.173      0.269       0.125 0.157\n3 FW        0.296      0.195       0.378 0.268\n4 GK        0.000475   0.00946     0     0    \n```\n\n\n:::\n\n```{.r .cell-code}\nball_progression |> \n  summarise(across(starts_with(\"d_\"), mean), .by = position) |> \n  arrange(desc(d_prg_r90))  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  position d_prg_c90 d_prg_p90 d_prg_r90 d_prg\n  <chr>        <dbl>     <dbl>     <dbl> <dbl>\n1 FW        0.296      0.195       0.378 0.268\n2 MF        0.220      0.362       0.177 0.223\n3 DF        0.173      0.269       0.125 0.157\n4 GK        0.000475   0.00946     0     0    \n```\n\n\n:::\n:::\n\n\n# Goal Threat\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngoal_threat <- \n  big_five_stats |>\n  mutate(\n    across(\n      .cols = c(g_minus_pk90, npxg90, sh90),\n      ~ d_max(.x, use_data = TRUE),\n      .names = \"d_{.col}\"\n      ),\n    d_goals = d_overall(across(starts_with(\"d_\")))\n  ) |> \n  select(player, team, league, position, g_minus_pk90, npxg90, sh90, starts_with(\"d_\")) |> \n  arrange(desc(d_goals))\n\ngoal_threat |> \n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 11\n   player              team            league  position g_minus_pk90 npxg90  sh90 d_g_minus_pk90 d_npxg90 d_sh90 d_goals\n   <chr>               <chr>           <chr>   <chr>           <dbl>  <dbl> <dbl>          <dbl>    <dbl>  <dbl>   <dbl>\n 1 Kylian Mbappé       Paris S-G       Ligue 1 FW               0.83   0.71  4.6           0.883    0.947  0.950   0.926\n 2 Erling Haaland      Manchester City Premie… FW               0.94   0.75  3.77          1        1      0.778   0.920\n 3 Victor Osimhen      Napoli          Serie A FW               0.84   0.66  4.63          0.894    0.88   0.956   0.909\n 4 Robert Lewandowski  Barcelona       La Liga FW               0.73   0.74  4.24          0.777    0.987  0.875   0.875\n 5 Lautaro Martínez    Inter           Serie A FW               0.7    0.58  4.37          0.745    0.773  0.902   0.804\n 6 Callum Wilson       Newcastle Utd   Premie… FW               0.72   0.72  3.36          0.766    0.96   0.692   0.798\n 7 Loïs Openda         Lens            Ligue 1 FW               0.72   0.63  3.68          0.766    0.84   0.759   0.787\n 8 Karim Benzema       Real Madrid     La Liga FW               0.53   0.66  4.37          0.564    0.88   0.902   0.765\n 9 Darwin Núñez        Liverpool       Premie… FW               0.48   0.64  4.46          0.511    0.853  0.921   0.738\n10 Alexandre Lacazette Lyon            Ligue 1 FW               0.65   0.55  3.29          0.691    0.733  0.678   0.700\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngoal_threat |> \n  summarise(across(starts_with(\"d_\"), mean), .by = league) |> \n  arrange(desc(d_goals))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n  league         d_g_minus_pk90 d_npxg90 d_sh90 d_goals\n  <chr>                   <dbl>    <dbl>  <dbl>   <dbl>\n1 Bundesliga              0.156    0.182  0.256   0.177\n2 Premier League          0.139    0.181  0.252   0.167\n3 Serie A                 0.128    0.166  0.268   0.161\n4 Ligue 1                 0.128    0.171  0.246   0.155\n5 La Liga                 0.119    0.163  0.248   0.149\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngoal_threat |> \n  summarise(across(starts_with(\"d_\"), mean), .by = team) |> \n  arrange(desc(d_goals))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 98 × 5\n   team            d_g_minus_pk90 d_npxg90 d_sh90 d_goals\n   <chr>                    <dbl>    <dbl>  <dbl>   <dbl>\n 1 Bayern Munich            0.285    0.296  0.377   0.307\n 2 Arsenal                  0.238    0.308  0.353   0.288\n 3 Dortmund                 0.254    0.274  0.329   0.275\n 4 Newcastle Utd            0.207    0.285  0.348   0.258\n 5 Inter                    0.199    0.253  0.349   0.246\n 6 Brighton                 0.191    0.271  0.337   0.241\n 7 Paris S-G                0.225    0.248  0.285   0.240\n 8 Manchester City          0.230    0.241  0.305   0.239\n 9 Barcelona                0.191    0.26   0.306   0.237\n10 Liverpool                0.217    0.251  0.325   0.233\n# ℹ 88 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngoal_threat |> \n  summarise(across(starts_with(\"d_\"), mean), .by = position) |> \n  arrange(desc(d_goals))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  position d_g_minus_pk90 d_npxg90  d_sh90 d_goals\n  <chr>             <dbl>    <dbl>   <dbl>   <dbl>\n1 FW               0.319   0.394   0.491    0.383 \n2 MF               0.112   0.146   0.259    0.141 \n3 DF               0.0468  0.0693  0.119    0.0544\n4 GK               0       0.00333 0.00390  0     \n```\n\n\n:::\n:::\n\n\n# Chance Creation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchance_creation <- \n  big_five_stats |>\n  mutate(\n    across(\n      .cols = c(ast90, xag90, sca90),\n      ~ d_max(.x, use_data = TRUE),\n      .names = \"d_{.col}\"\n      ),\n    d_chances = d_overall(across(starts_with(\"d_\")))\n  ) |> \n  select(player, team, league, position, ast90, xag90, sca90, starts_with(\"d_\")) |> \n  arrange(desc(d_chances))\n\nchance_creation |> \n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 11\n   player            team            league         position ast90 xag90 sca90 d_ast90 d_xag90 d_sca90 d_chances\n   <chr>             <chr>           <chr>          <chr>    <dbl> <dbl> <dbl>   <dbl>   <dbl>   <dbl>     <dbl>\n 1 Kevin De Bruyne   Manchester City Premier League MF        0.6   0.51  6.55   0.619   1       0.986     0.848\n 2 Neymar            Paris S-G       Ligue 1        MF        0.64  0.51  6.11   0.660   1       0.920     0.847\n 3 Leandro Trossard  Arsenal         Premier League FW        0.97  0.46  3.29   1       0.902   0.495     0.765\n 4 Lionel Messi      Paris S-G       Ligue 1        FW        0.51  0.43  6.25   0.526   0.843   0.941     0.747\n 5 Antoine Griezmann Atlético Madrid La Liga        FW        0.5   0.44  5.1    0.515   0.863   0.768     0.699\n 6 Gerard Deulofeu   Udinese         Serie A        FW        0.45  0.33  6.09   0.464   0.647   0.917     0.651\n 7 Rémy Cabella      Lille           Ligue 1        MF        0.36  0.38  6.45   0.371   0.745   0.971     0.645\n 8 Edon Zhegrova     Lille           Ligue 1        FW        0.34  0.39  6.64   0.351   0.765   1         0.645\n 9 Florian Wirtz     Leverkusen      Bundesliga     FW        0.5   0.32  5.28   0.515   0.627   0.795     0.636\n10 Riyad Mahrez      Manchester City Premier League FW        0.47  0.33  5.44   0.485   0.647   0.819     0.636\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchance_creation |> \n  summarise(across(starts_with(\"d_\"), mean), .by = position) |> \n  arrange(desc(d_chances))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  position d_ast90 d_xag90 d_sca90 d_chances\n  <chr>      <dbl>   <dbl>   <dbl>     <dbl>\n1 FW       0.152   0.294    0.443    0.245  \n2 MF       0.113   0.227    0.407    0.194  \n3 DF       0.0565  0.117    0.211    0.0876 \n4 GK       0.00387 0.00490  0.0427   0.00453\n```\n\n\n:::\n:::\n\n\n# Identifying the \"Best\" Offensive Players\n\nWe could try and just take the overall desirability score of our three overall desirability scores, for goals, chance creation, and progression.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_players <- \n  goal_threat |> \n  full_join(chance_creation) |> \n  full_join(ball_progression) |> \n  mutate(\n    d_best_players = d_overall(across(.cols = c(d_goals, d_chances, d_prg)))\n  ) |> \n  select(player, team, league, position, d_goals, d_chances, d_prg, d_best_players) |> \n  arrange(desc(d_best_players))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(player, team, league, position)`\nJoining with `by = join_by(player, team, league, position)`\n```\n\n\n:::\n\n```{.r .cell-code}\nbest_players |> \n  head(20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 8\n   player            team            league         position d_goals d_chances d_prg d_best_players\n   <chr>             <chr>           <chr>          <chr>      <dbl>     <dbl> <dbl>          <dbl>\n 1 Lionel Messi      Paris S-G       Ligue 1        FW         0.669     0.747 0.495          0.628\n 2 Neymar            Paris S-G       Ligue 1        MF         0.530     0.847 0.518          0.615\n 3 Kingsley Coman    Bayern Munich   Bundesliga     FW         0.513     0.570 0.641          0.572\n 4 Kylian Mbappé     Paris S-G       Ligue 1        FW         0.926     0.371 0.545          0.572\n 5 Edon Zhegrova     Lille           Ligue 1        FW         0.439     0.645 0.616          0.559\n 6 Ousmane Dembélé   Barcelona       La Liga        FW         0.418     0.615 0.629          0.545\n 7 Kevin De Bruyne   Manchester City Premier League MF         0.338     0.848 0.538          0.536\n 8 Raphinha          Barcelona       La Liga        FW         0.498     0.584 0.521          0.533\n 9 Antoine Griezmann Atlético Madrid La Liga        FW         0.572     0.699 0.377          0.532\n10 Rafael Leão       Milan           Serie A        FW         0.607     0.477 0.466          0.513\n11 Gerard Deulofeu   Udinese         Serie A        FW         0.379     0.651 0.522          0.505\n12 Rayan Cherki      Lyon            Ligue 1        MF         0.339     0.569 0.653          0.501\n13 Marco Asensio     Real Madrid     La Liga        FW         0.592     0.543 0.373          0.493\n14 Rodrygo           Real Madrid     La Liga        FW         0.540     0.492 0.443          0.490\n15 Vinicius Júnior   Real Madrid     La Liga        FW         0.427     0.514 0.537          0.490\n16 Jamal Musiala     Bayern Munich   Bundesliga     MF         0.503     0.549 0.422          0.488\n17 Serge Gnabry      Bayern Munich   Bundesliga     FW         0.682     0.415 0.404          0.485\n18 Ademola Lookman   Atalanta        Serie A        FW         0.513     0.526 0.423          0.485\n19 Donyell Malen     Dortmund        Bundesliga     FW         0.606     0.456 0.412          0.484\n20 Mohamed Salah     Liverpool       Premier League FW         0.614     0.432 0.426          0.484\n```\n\n\n:::\n:::\n\n\nHowever, at a glance, there are a few surprises in here. I think everyone in the top 20 is very good, but several players probably don't belong quite as high as they are in this ranking. Kingsley Coman, Edon Zhegrova, and Raphinha all jumped out at me, but they're not the only ones. \n\nAlthough part of this will be league effects, one of the biggest issues is the fact that every variable that has gone into the desirability functions has been treated with equal weight. I don't think progressive receptions should be treated as though they are equally as valuable as goals.\n\nDesirability functions allow for the weighting of the parameters that make up the function, however, the difficulty here is I'm not entirely sure how I should weight these.\n\n## Acknowledgments {.appendix}\n\nPreview image by [Dan Cristian Pădureț](https://unsplash.com/@dancristianpaduret) on [Unsplash](https://unsplash.com/photos/a-blackboard-with-a-bunch-of-diagrams-on-it-h3kuhYUCE9A).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}