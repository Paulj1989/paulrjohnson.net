{
  "hash": "a716f78234f20631e7b101f8ccc4764e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Analysing the Effect of Money in Football Using Multilevel Regression\nsubtitle: |\n  Analysing football club resources and league performance using MLMs\ndescription-meta: |\n  Developing a multilevel model to measure the effect of football (soccer) club \n  resources on league points, goals, and expected goals in Europe's top five \n  leagues.\ndate: 2024-09-29\nimage: money.webp\nimage-alt: |\n  A photograph of many â‚¬100 bank notes layered on top of each other.\ncategories: [Multilevel Regression, Statistics, R]\nbibliography: references.bib\n---\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Setup Code (Click to Expand)\"}\n# import packages\nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(lme4)\n  library(gt)\n  library(ggplot2)\n})\n\n# setup fonts\nsysfonts::font_add_google(\"Poppins\")\nsysfonts::font_add_google(\"Lora\")\nshowtext::showtext_auto()\n\n# set plot theme\n# inspired by https://github.com/z3tt/TidyTuesday/blob/main/R/2020_31_PalmerPenguins.Rmd\ntheme_set(theme_minimal(base_size = 20, base_family = \"Poppins\")) +\n  theme_update(\n    panel.grid.major = element_line(color = \"grey90\", linewidth = .4),\n    panel.grid.minor = element_blank(),\n    panel.spacing.x = unit(.65, units = \"cm\"),\n    panel.spacing.y = unit(.3, units = \"cm\"),\n    axis.title.x = element_text(\n      color = \"grey30\", margin = margin(t = 5), size = rel(1.05)\n      ),\n    axis.title.y = element_text(\n      color = \"grey30\", margin = margin(r = 5), size = rel(1.05)\n      ),\n    axis.text = element_text(color = \"grey50\", size = rel(1)),\n    axis.text.x = element_text(angle = 30, vjust = 1, hjust = .75),\n    axis.ticks = element_line(color = \"grey90\", linewidth = .4),\n    axis.ticks.length = unit(.2, \"lines\"),\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    legend.text = element_text(size = rel(.9)),\n    legend.box.margin = margin(0, 0, -10, 0),\n    legend.key.width = unit(1, units = \"cm\"),\n    plot.title = element_text(\n      hjust = 0, color = \"black\", family = \"Lora\",\n      size = rel(1.5), margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      hjust = 0, color = \"grey30\", family = \"Lora\",\n      lineheight = 0.5, size = rel(1.1), \n      margin = margin(5, 0, 5, 0)\n    ),\n    plot.title.position = \"plot\",\n    plot.caption = element_text(\n      color = \"grey50\", size = rel(0.8), hjust = 1,\n      margin = margin(10, 0, 0, 0)\n    ),\n    plot.caption.position = \"plot\",\n    plot.margin = margin(rep(10, 4)),\n    strip.text = element_text(size = rel(1), margin = margin(0, 0, 5, 0)),\n    strip.clip = \"off\"\n  )\n\n# set table theme\ntbl_theme <-\n  function(data, width = 100, alignment = \"center\") {\n    data |>\n      tab_source_note(\n        source_note = \"Source: FBref & Transfermarkt Via {worldfootballR}\"\n        ) |>\n      tab_options(\n        table.width = pct(width), \n        table.align = alignment,\n        table.font.names = \"Poppins\"\n        ) |> \n      tab_style(\n        style = cell_text(align = \"left\"),\n        locations = list(cells_source_notes(), cells_footnotes())\n        )\n  }\n\n# load data\nclub_resources <- \n  readr::read_rds(\n    here::here(\n      \"blog\", \"2024-09-29-analysing-money-in-football\", \n      \"data\", \"club_resources.rds\"\n      )\n  )\n```\n:::\n\n::: {.cell}\n<style type=\"text/css\">\n.rm-striping .gt_table tr.odd {\n  --bs-table-striped-bg: transparent;\n}\n</style>\n:::\n\n\n\nBuilding a brand is an important step in any career that involves any public-facing or portfolio-based work. When we finally decide to gig economy all the jobs in an attempt to finally achieve the goal of implementing a perfectly awful capitalist hellscape, the first to go will be the folks that were too busy \"being with their family\", \"seeing the world\", or \"living a rich and fulfilling life\" to build their **brand**. While some people are blessed with names like [Adam L. Ozer](https://adamlozer.github.io)[^Loser], those of us who were given names so generic and not remotely funny that we are never more than ten metres away from a namesake have to work a little harder to distinguish ourselves. I could wear a hat, I suppose, but that seems like an awful lot of upkeep. I'd have to buy the hat, and then I'd have to wear it, and I assume I'd have to wash it sometimes too[^Hats]. No. That won't do. I'd much rather build a brand around having One Neat Trick. Like Daron Acemoglu with instrumental variables, except without any of the high-quality research and none of the prolific work-rate.\n\nLuckily, I already know what my One Neat Trick is. It's multilevel models[^Innovation]. I really like multilevel regression models. I recommend them for most problems, usually long before I'm sure they are necessary. I assume that most problems will eventually reveal some multilevel data that justifies the use of a multilevel model, and once you've convinced yourself that this particular hammer does actually turn everything into a nail, it's hard to roll that back. I'm fortunate that in this case I'm not far from the truth. It's good that I didn't pick Tobit regression[^Tobits]. \n\nSo when I was inspired to take a deeper look at the effect that financial resources have on outcomes in football, because a [tweet](https://x.com/SBienkowski/status/1561464135279329280) had me mad on the Internet[^Tweet], I assumed it was probably going to be a multilevel model. I'm interested in understanding just how much of an impact money has on football, and whether it really all comes down to just spending your way to the top of the table. I have leveraged Transfermarkt's squad values as a proxy for a club's financial powers and used outcomes in Europe's big five leagues, from 2012/13 to 2023/24, to estimate the effect that resources have on league performance. It probably goes without saying that the results suggest that having money is good and that teams with lots of money tend to be better at football, but there's some relatively interesting nuance in there too, so this blog post wasn't a complete waste of time. \n\nI'm still unsure if this blog post is really more about multilevel regression or about money in football, but the beauty of running your own silly little blog is that you can write posts that meander aimlessly and if someone has the misfortune to read it all, that's on them. Anyway, lets find out where this one heads.\n\n[^Loser]:\n    \n    His name is Adam **LOSER**.\n\n[^Hats]:\n\n    Yes I know you have to wash hats.\n\n[^Innovation]:\n\n    Which, to be clear, is a method I have had no hand in the development or innovation in its use, nor have I inspired an entire methodological hype cycle around its use \n    because of my work. I just like them.\n    \n[^Tobits]:\n\n    Please don't @ me if you use Tobits all the time. ~~You're probably very boring.~~ It's just a silly joke.\n\n[^Tweet]:\n\n    The eagle-eyed among you will notice that the tweet in question is over two years old. I haven't spent the last two years so seething with rage that I am unable to \n    concentrate on building my silly little model that would prove Stefan wrong. I've just been kicking this idea around for a couple years and have finally got round \n    to finishing it off.\n\n## Multilevel Models for Multilevel Problems\n\nMultilevel models address problems caused by clustered (or multilevel) data in standard linear (and generalised linear) models, namely, the violation of the assumption of independence. \n\nThe independence assumption is a central tenet of regression modelling that states that all residuals in a model should be independent. When data is clustered, observations within clusters will be correlated, leading to residuals that are also correlated (and therefore not independent). Clustered data effectively inflates the sample size[^Dependence], and a model that fails to account for this will underestimate the standard errors of parameter estimates. These smaller standard errors give the appearance of certainty where certainty does not exist.\n\nMultilevel models handle clustered data and the correlation between observations within clusters by explicitly modelling the grouping structures in the data. By modelling the grouping structures, this allows us to fit models at the population level while accounting for the unexplained variance among the groups [@gelman2006], which produces more appropriate standard errors. \n\nSo when you encounter multilevel data, there's a multilevel model for it!\n\n\n[^Dependence]:\n\n    Each observation is assumed to contribute equally independent information. Clustered data points, however, will be partially dependent, which makes some of the information \n    contributed by each point redundant. While the data may contain 100 observations, the information contributed will be equivalent to fewer truly independent observations.\n\n### The Prevalence of Multilevel Data\n\nMy first exposure to multilevel data came during my studies for a Political Science PhD. My primary field was comparative politics[^Comparative], and I was particularly interested in political parties and party systems. Being able to say anything meaningful about political parties that can be generalised across a wide range of contexts requires studying parties in lots of different countries. But it turns out every country is a special snowflake and there's lots of details that make them unique, so finding the golden nuggets of generalisable insight required controlling for those differences. This is a good example of data that is structured in multiple levels, or hierarchies in this case. Political parties are nested in countries, and countries are nested in regions or continents. Depending on the the nature of the question being studied, you might have further hierarchies in the data, like party families that group parties across Europe, or you might have other types of grouping structures in the data that are not hierarchical, like electoral outcomes grouping by year.\n\nMultilevel data can come in a variety of forms, but whenever you find clustering or groups in your data, this is a sign you're working with multilevel data. If you think that your data could be organised into groups for which observations within-group will be more similar to each other than they are to the rest of the observations, you should be thinking about the problems that arise from clustered data and how you might account for the grouping structures in your data. That doesn't necessarily have to mean a multilevel model, but multilevel models are certainly one of the best solutions.\n\nClustering is not just a quirk that you occasionally observe in the real-world, though. It is extremely common to observe multilevel data, because it turns out that lots of things we might be interested in studying can be organised in all manner of groups. The prevalence of multilevel data in the real-world is so great that @mcelreath2017 argues that our starting assumption should be that any data has grouping structures that need to be accounted and that multilevel regression should be our default model. Whether or not you think this stance is too aggressive, I think Richard is absolutely right to point out how common multilevel data is. Once you've learned about multilevel data it's impossible to look at any data and not see it. It's everywhere. Which is why multilevel regression is such a useful addition to the data science toolbox.\n\n[^Comparative]:\n\n    The field you pick when you don't want to know anything about any particular country's politics and just want to interject with your annoying little opinions when any \n    politics comes up.\n\n### Models with Memory...\n\nThe existence of clustering in your data complicates any attempts to model an outcome of interest at the population-level, making it necessary to split the population-level variance (the variance across all observations without accounting for grouping structure) into two components - within-group variance (variance across observations within the same group) and between-group variance (variance across groups). The between-group variance estimates how much groups differ from each other, on average, and tells us how much group-level factors influence the outcome, while the within-group variance, the remainder of the population-level variance after group differences have been accounted for, estimates how much observations differ from one another in a given group, telling us the population-level differences that are not explained by the group that observation belongs to.\n\nI think the most intuitive way to understand how multilevel models work, at a conceptual level, is that put forward by Richard McElreath [-@mcelreath2023] in the multilevel models chapter of his Statistical Rethinking lectures[^Rethinking], which is embedded below. While the focus is on Bayesian methods, the early chapters of the video talk in general enough terms to apply to frequentist multilevel models too. \n\n\n\n{{< video https://youtu.be/iwVqiiXYeC4?si=YmR8plIeBkQ2ufi5 >}}\n\n\n\n\n@mcelreath2023 describes multilevel models as \"models within models\". You are not fitting multiple models at the same time, but it can be helpful to think about a multilevel model as bringing together the information that comes from models of the different levels at which variance exists. The population-level model (again, a \"model\" from a conceptual but not technical perspective) estimates population-level effects, much like a single-level model, while group-level sub-models estimate the group-specific deviations from the population-level effects. The population model serves as a jumping off point for each sub-model, and in this sense the population model gives what McElreath describes as \"a kind of memory\" when fitting the sub-models.\n\n[^Rethinking]:\n\n    I will borrow heavily from McElreath's approach to explaining multilevel models from Statistical Rethinking [-@mcelreath2018; -@mcelreath2023], because any attempt by me\n    to better it will probably be a complete mess. If you find yourself thirsty for knowledge (about statistical modeling generally, including multilevel models) having read \n    this blog post, Statistical Rethinking (in either book or video form) is a pretty good place to start.\n\n#### ...Learn Faster \n\nWhen dealing with clustered data, a single-level model that controls for the grouping structure in the data leaves information on the table by treating each group as entirely independent of each other[^Independence]. To continue to riff off McElreath's idea of model memory, a single-level model will forget everything it has learned, whenever it switches clusters [@mcelreath2017]. But clusters that are of the same type will have common features. For example, in a regression model that estimates how party members behave under certain conditions, party members will be clustered by the political party, and while every political party will be different, there will also be inherent similarities that are very useful to factor in to a model.\n\nWhile single-level models leave a lot of information on the table, multilevel models retain information about other clusters by borrowing information from the overall population when estimating group-level effects, in a process called \"partial pooling\" (more on this in the following section). This process causes multilevel models to learn \"faster\" and more efficiently by leveraging information from across all groups when modelling group-level differences, and it allows multilevel models to reach stable point estimates with less data, because groups with smaller sample sizes can rely more heavily on the information borrowed from the population.\n\n[^Independence]:\n\n    As a reminder, a single-level model that doesn't account for grouping structure at all will not only leave a lot of information on the table by not considering the \n    grouping structure as an explanatory variable, it will also violate the independence assumption. That's bad. Don't do that.\n\n#### ...Resist Overfitting\n\nPartial pooling makes multilevel models both efficient and flexible, but in addition to this, shrinking group-level estimates towards the overall population mean serves as a form of regularisation[^Regularisation], striking a balance between underfitting[^Underfitting] and overfitting[^Overfitting].\n\nThis balance is a natural consequence of partial pooling, which itself finds a compromise between complete and no pooling. Complete pooling models all observations together, not accounting for any group effects, and fits a single global estimate. This leads to underfitting because the model is not complex enough to effectively model the variation in the data, with between-group variance that is an important part of the data generating process but is being ignored. On the other hand, models with no pooling treat groups as independent of each other, fitting separate models for each group. No pooling leads to overfitting, particularly with groups that have limited data, because the model doesn't use information from other groups that might help stabilise estimates, and without that additional context the model is more likely to treat the group-level noise as signal.\n\nThe partial pooling process is an \"adaptive compromise that achieves regularisation\" [@mcelreath2023]. It balances the risks of underfitting and overfitting by pooling information across the groups, shrinking all group-level estimates towards the overall population mean. The amount of shrinkage depends on how large a group's sample is and how much variance there is in that group. Groups with less data or high variance will shrink towards the population mean more. This means that extreme group-level estimates are less likely unless the group has a large enough sample and small enough variance to make it justifiable.\n\nWhile the motivation for moving away from single-level models when dealing with clustered data is the artificially small standard errors they will estimate, the reason to fall in love with multilevel models as the solution to clustered data is partial pooling. Partial pooling, which serves as a type of memory, makes multilevel models more efficient, faster, and less vulnerable to overfitting, and the consequence of all of this, is better point estimates. So clustered data is everywhere, and when dealing with clustered data a multilevel model will produce more realistic uncertainty estimates and more accurate point estimates. If you're not convinced by now you're a heathen.\n\n[^Regularisation]:\n\n    Regularisation is the process of deliberately constraining model parameters in order to discourage the model from fitting to the noise in the data in order to make the\n    model more generalisable.\n    \n[^Underfitting]:\n\n    Underfitting describes a situation where a model is too simple and is unable to capture the true underlying structure of the data.\n    \n[^Overfitting]:\n\n    Overfitting, as you may have guessed, is the opposite of underfitting, where a model is too complex and it captures the observed data structure in detail, but in the \n    process it also captures the noise and idiosyncrasies of the sample data.\n\n## The Role of Money in Football\n\nHaving (hopefully) given you a decent overview of multilevel models conceptually, and demonstrated how much value they can add to so many problems, I suppose I should now make an effort to prove that the data we are using here is a good fit for a multilevel model.\n\nLet me shock you, for a second: I believe that football clubs with lots of money generally do better than those without. While I'm sure even readers that are not interested in football are well aware that money makes the goals go round, I don't think we know _exactly_ how much of an impact money can have on club outcomes. \n\nWe will model the association between club resource and league outcomes, primarily focusing on total points, but also goals and expected goals. Club resources will be captured using Transfermarkt squad values as a noisy proxy for the financial strength of a team. This is imperfect, by all means, but I think it's justifiable. Values for each player are crowdsourced by the nerds that make up the Transfermarkt community, with the goal being that these values will be an approximation of what a player would cost on the open market. This process relies on the wisdom of the crowds [@transfermarkt2021]. \n\nI think these values can be relied on to be a fine though imperfect estimate of a player's value in an open market (not a prediction of what they will actually sell for), and in this, a useful measure that can be leveraged here. The goal is to understand how a club's financial resources can impact their results on the pitch, and obviously the most important mechanism is investing in the squad (though there will be other factors - coaching and support staff, facilities, etc.). Build a better team, get better results! A reliable measure of squad value (and how it changes over time) should give some indication of how the club has invested in their team[^Spending], and this is what we're most interested in here.\n\n[^Spending]: \n\n    The assumption here is that every team spends, more or less, as much as their finances allow. We know that's not entirely true, since some clubs are extremely frugal, \n    and others (many more, in fact) spend well beyond their means. I think this distinction is unimportant. The interest in club resources is assuming they spend that money. \n    It's just a little catchier to talk about money rather than the spending of that money.\n\n### Exploring Football's Multilevel Data\n\nFootball has some immediately obvious grouping structure. The promotion/relegation system explicitly organises teams hierarchically! I'm only looking at outcomes in the top divisions, but I am also looking at leagues in five different countries, which is going to be a source of some clustering in the data too. Since I am looking at outcomes over 12 seasons, the teams themselves will also be a huge source of clustering too, because inevitably certain teams will do more with their money than others and will regularly outperform others in the league.\n\n#### League Differences\n\nNot accounting for league differences would likely lead to Bayern Munich's dominance in the Bundesliga not being given enough weight and therefore the regression would undervalue the effect of financial resources. While Bayern are certainly one of the richest clubs in the world, there are plenty of teams across the big five leagues with at least comparable resources, and in the Premier League there are multiple teams with a lot more money. However, compared against the rest of the Bundesliga, Bayern have untold riches, and this has been a major contributing factor in their decade-long run of title-winning seasons. It is necessary to account for league effects, among other factors, to make sure details like this are not missed by the regression model.\n\nThis becomes more obvious when we plot the median squad market values in the big five leagues over time, as shown below. The massive resource advantage that the likes of Bayern Munich, Juventus, PSG, Real Madrid, and Barcelona hold over their league compatriots would potentially be masked by the huge amount of money in the Premier League. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nclub_resources |> \n  group_by(league, season) |> \n  summarise(squad_value = median(squad_value)) |> \n  ggplot(aes(forcats::as_factor(season), squad_value, group = league, fill = league)) +\n  geom_col(position = \"dodge\", colour = \"#343a40\") +\n  geom_hline(yintercept = 0, colour = \"#343a40\") +\n  scale_fill_manual(values = c(\"#7AB5CC\", \"#026E99\", \"#FFA600\", \"#D93649\", \"#8C3431\")) +\n  scale_y_continuous(\n    labels = \n      scales::label_number(scale_cut = scales::cut_short_scale(), prefix = \"â‚¬\")\n    ) +\n  labs(\n    title = \"Squad Value in the Top Five Leagues Over Time\",\n    x = NULL, y = \"Squad Value\",\n    caption = \n      \"Visualisation: Paul Johnson | Data: Transfermarkt Via {worldfootballR}\"\n    ) +\n  theme(legend.key.width = unit(.8, units = \"cm\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/value-by-league-1.png){width=672}\n:::\n:::\n\n\n\nPlenty of Premier League teams have astronomical amounts of money when compared even against the rest of the big five leagues despite not coming close to mixing with the very richest teams in England. It's important to account for league differences so that those teams are being compared against their league competition, where their gigantic vault of gold is only a moderately-sized pot of gold. This disparity has only grown larger as time goes on. The Premier League really has far too much money.\n\n#### Squad Values\n\nOf course, just being rich isn't enough. What do rich clubs do with all that money? Well, besides Manchester United, they spend it on good players! We should expect that, on average, rich teams will build squads that are more valuable, and that teams that are valued higher by Transfermarkt will be more successful in the league. The plot below visualises how our three outcomes (points, goal difference, and expected goals (xG) difference) vary by squad market value, all split by league.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nclub_resources |> \n  tidyr::pivot_longer(\n    cols = c(pts, xgd, gd),\n    names_to = \"outcome\",\n    values_to = \"value\"\n  ) |> \n  mutate(\n    outcome =\n      factor(\n        case_when(\n          outcome == \"pts\" ~ \"League Points\",\n          outcome == \"xgd\" ~ \"xG Difference\",\n          outcome == \"gd\" ~ \"Goal Difference\",\n          .default = outcome\n          ),\n        levels = c(\"League Points\", \"Goal Difference\", \"xG Difference\")\n      )\n  ) |> \n  ggplot(aes(squad_value, value)) +\n  geom_point(alpha = .4, size = .8, colour = \"#343a40\") +\n  geom_smooth(\n    method = lm, formula = y ~ log(x), colour = \"#026E99\",\n    se = FALSE, linewidth = 1.2\n  ) +\n  facet_grid(rows = vars(outcome), cols = vars(league), scales = \"free_y\") +\n  scale_x_continuous(\n    labels = \n      scales::label_number(scale_cut = scales::cut_short_scale(), prefix = \"â‚¬\")\n    ) +\n  labs(\n    title = \"Season Outcomes by Squad Value in the Top Five Leagues\",\n    x = \"Squad Value\", y = NULL,\n    caption = \n      \"Visualisation: Paul Johnson | Data: Transfermarkt Via {worldfootballR}\"\n    ) +\n  theme(\n    panel.spacing.x = unit(.3, units = \"cm\"),\n    axis.text.x = element_text(angle = 30, vjust = 1, hjust = .75)\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/value-by-outcome-1.png){width=672}\n:::\n:::\n\n\n\nIt's clear that the value of a team's squad has a positive effect on all three outcomes, though that relationship is non-linear. It appears that increases in squad market value at the lower end of the range of values have a huge impact on each outcome but that this effect tails off, to varying degrees by outcome and league, as squad market value approaches the higher end of it's range. That sounds an awful lot like a logarithm function! The regression line fit to the data is done so using a log-transformed squad market value, and while it's not perfect, it does seem to do a reasonably good job of fitting the data, and it captures the apparent diminishing returns as squad market values get way out in front of the rest of the league.\n\nIt is also worth noting that while the relationship between squad value and the outcomes is similar across all five leagues, there is some variance, and this is most obvious up around the upper quartile of squad values for each league. The highest squad values are much larger in some leagues than others, as are the highest total values of each outcome (especially the league points, since these are constrained by a maximum number of points that any team could win, which varies by league). This illustrates how not accounting for league differences could bias a regression of market value's effects on league performance. \n\n#### Season Differences\n\nFinally, we can consider how these effects have changed over time, plotting the relationship between squad values and league points, split by time, below. The darker blue points are earlier seasons in the data and the lighter grey points are the most recent seasons[^Legend].\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nclub_resources |>\n  ggplot(aes(squad_value, pts, colour = season)) +\n  geom_point(alpha = .6, size = 1.2) +\n  geom_smooth(\n    method = lm, formula = y ~ log(x), se = FALSE, linewidth = 1, alpha = .6\n    ) +\n  scale_colour_manual(\n    values =\n      c(\n        \"#026E99\", \"#10799E\", \"#2183A4\", \"#338DA9\", \"#4497AF\", \"#56A1B4\",\n        \"#69ABBA\", \"#7CB4C0\", \"#8FBDC6\", \"#A3C6CC\", \"#B8CED3\", \"#CDD6D9\"\n        ),\n    guide = FALSE\n    ) +\n  scale_x_continuous(\n    labels =\n      scales::label_number(scale_cut = scales::cut_short_scale(), prefix = \"â‚¬\")\n    ) +\n  labs(\n    title = \"League Points by Squad Value Over Time\",\n    x = \"Squad Value\", y = \"League Points\",\n    caption = \n      \"Visualisation: Paul Johnson | Data: Transfermarkt Via {worldfootballR}\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/value-by-season-1.png){width=672}\n:::\n:::\n\n\n\nThere is a clear shift over time, with the earliest seasons seeing the greatest marginal gains in league points as squad values increase at the lower end of the values, and over time we see that curve flatten out a little. This is because, as more money is spent in the top five leagues each season, the gains you can get from those smaller increases in squad value are no longer there. It looks like teams are having to spend more to increase their points totals now, and the ceiling of squad values has increased with time too.\n\n[^Legend]:\n\n    I know I probably should have used a legend here, but seasons are discrete values and 12 different values in a legend is silly. If the colours were intended to do any \n    more than just split the seasons up (as opposed to actually needing to distinguish which season is which), I would have accepted my fate, or spent more time thinking \n    of a better way of visualising this, but here we are. All you really need to see is the shifting of the regression lines over time.\n\n### Estimating Squad Value Effects\n\nThe previous section highlights multiple grouping structures that need to be accounted for in the data, which is fortunate because I've already spent a lot of time talking about multilevel models here, and that would have been a real waste of time. This exploratory work also identified that squad values appear to have a non-linear relationship with the three outcomes. The other detail that we can see from the variation within and between groups across the range of squad values is that not only does the mean value vary by league, but also the magnitude of squad value's effect on the three outcomes varies. Multilevel models can handle both of these types of variation quite easily. When the mean difference is allowed to vary between groups this is a varying intercepts model, and allowing the magnitude of the effect to vary by group is called a varying slopes model. When your model allows both, it is a varying intercepts & slopes model[^MLMs], and this is the kind of model we will use here. Both the slope and intercept differences were relatively small, but this was only at the league level[^Null]. The biggest differences will occur at club-level, but this would have been a mess to visualise. \n\nThe regression models fit to the three outcomes - league points, goal difference, and xG difference - all have the same basic structure. All three outcomes have been transformed to a \"Per Game\" value, in order to account for the shortened season in Ligue 1 during Covid. Squad market value and time, a continuous variable with a minimum value of 0 (the 2012/13 season) and a maximum value of 12 (the 2023/24 season), are included in the model as population-level predictor variables. Squad values have been log-transformed and centred. The log-transformation was carried out to account for the decreasing marginal gains as squad values increase and the squad values were centred around a mean of zero in order to make the intercept value more meaningful. The time variable has been included  as a continuous variable to help account for changes in the distribution of outcomes over time (for example increasing disparities in outcomes between the best and worst teams). The grouping structures include team nested in league and a separate crossed grouping variable for season[^Structures]. \n\nWhile the model intercepts are allowed to vary according to each of these grouping structures, the squad value slopes are specified to vary by the nested league/team grouping. This means that the magnitude of the effect squad values have on outcomes is allowed to vary by league and team. We could have allowed the squad value effects to vary by season as well, given that there did appear to be some flattening of the curve of squad values association with league points over time, however, the differences were small and allowing the intercepts to vary should be sufficient, without inviting unnecessary complexity. The season grouping structure, in contrast to the population-level time variable (which is intended to capture trends), mostly serves to capture the fact that outcomes are not independent of each other in a given season. There are a finite number of points in a season, so if Man City win them all, there's none left for anyone else. Similarly, if Man City score 1000 goals, everyone else's goal difference will be much worse. Finally, the model is specified with no covariance between the league/team intercepts and slopes, because there were some issues with singularity[^Singularity].\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Helper Function Code (Click to Expand)\"}\nfit_mlms <- \n  function(data) {\n    lmer(\n      value ~ 1 + squad_value + time + (1 | league/squad) +\n        (0 + squad_value | league/squad) + (1 | season),\n      data = data, REML = TRUE,\n      control = lmerControl(optimizer = \"bobyqa\", optCtrl = list(maxfun = 200000))\n      )\n  }\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Model Code (Click to Expand)\"}\nmodels <-\n  club_resources |>\n  tidyr::pivot_longer(\n    cols = c(pts, xgd, gd),\n    names_to = \"outcome\",\n    values_to = \"value\"\n  ) |>\n  mutate(\n    value = value/mp,\n    squad_value = datawizard::centre(log(squad_value)),\n    time = as.numeric(season) - 1,\n    outcome =\n      case_when(\n        outcome == \"pts\" ~ \"Points\",\n        outcome == \"gd\" ~ \"Goal Difference\",\n        outcome == \"xgd\" ~ \"xG Difference\",\n        .default = outcome\n      )\n  ) |>\n  tidyr::nest(.by = c(outcome)) |> \n  mutate(\n    model = purrr::map(data, fit_mlms),\n    summary = purrr::map(model, broom.mixed::glance),\n    coefs = purrr::map(model, ~ broom.mixed::tidy(.x, conf.int = TRUE)),\n    preds = purrr::map(model, ~ predict(.x))\n  )\n```\n:::\n\n\n\nI've used a function that fits the same model across the three outcomes, and the models have been fit in a dataframe which is nested by outcome, using `purrr::map` (the code for both in the above code chunks). This avoids a little repetition and keeps the code nice and tidy. The regression results are below in @tbl-model-summary. \n\n\n\n::: {#tbl-model-summary .cell tbl-cap='Multilevel Regressions of Club Resources\\' Effect on League Outcomes & Performance\n'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Table Code (Click to Expand)\"}\ncm <-\n  c(\n    \"(Intercept)\" = \"(Intercept)\",\n    \"squad_value\" = \"Squad Value\",\n    \"time\" = \"Time (Seasons)\",\n    \"SD (Intercept squadleague)\" = \"_Club_: Intercept Variance\",\n    \"SD (squad_value squad.league)\" = \"_Club_: Slope Variance\",\n    # \"Cor (Intercept~squad_value squadleague)\" = \"_Club_: Intercept/Slope Covariance\",\n    \"SD (Intercept league)\" = \"_League_: Intercept Variance\",\n    \"SD (squad_value league)\" = \"_League_: Slope Variance\",\n    # \"Cor (Intercept~squad_value league)\" = \"_League_: Intercept/Slope Covariance\",\n    \"SD (Intercept season)\" = \"_Season_: Intercept Variance\",\n    \"SD (Observations)\" = \"Residual Variance\"\n  )\n\nmodels |> \n  pull(model, name = outcome) |>\n  modelsummary::msummary(\n    statistic = 'conf.int', gof_omit = \"AIC|BIC\", coef_map = cm, \n    fmt = 2, output = \"gt\"\n    ) |> \n  tab_row_group(\n    label = md(\"**Group Effects**\"),\n    rows = 7:11\n  ) |>\n  tab_row_group(\n    label = md(\"**Population-Level Effects**\"),\n    rows = 1:6\n  ) |>\n  tab_footnote(\n    footnote = \"Time represented as integers 0-11 where 2012/13 = 0 and 2022/23 = 11.\",\n    locations =\n      cells_body(\n        columns = 1,\n        rows = 5\n      )\n  ) |>\n  tab_footnote(\n    footnote = \"Market value log-transformed and centred around grand mean.\",\n    locations =\n      cells_body(\n        columns = 1,\n        rows = 3\n      )\n    ) |>\n  tab_spanner(columns = 2:4, label = \"Outcomes (Per Game)\") |> \n  fmt_markdown(columns = 1, rows = 7:11) |>\n  tab_style(\n    style = cell_text(size = \"medium\"),\n    locations = cells_body(\n      columns = 2:4,\n      rows = c(2, 4, 6)\n    )\n  ) |> \n  tbl_theme()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"bqvfizzxlv\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#bqvfizzxlv table {\n  font-family: Poppins;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#bqvfizzxlv thead, #bqvfizzxlv tbody, #bqvfizzxlv tfoot, #bqvfizzxlv tr, #bqvfizzxlv td, #bqvfizzxlv th {\n  border-style: none;\n}\n\n#bqvfizzxlv p {\n  margin: 0;\n  padding: 0;\n}\n\n#bqvfizzxlv .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#bqvfizzxlv .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#bqvfizzxlv .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#bqvfizzxlv .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#bqvfizzxlv .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#bqvfizzxlv .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#bqvfizzxlv .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#bqvfizzxlv .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#bqvfizzxlv .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#bqvfizzxlv .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#bqvfizzxlv .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#bqvfizzxlv .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#bqvfizzxlv .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#bqvfizzxlv .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#bqvfizzxlv .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bqvfizzxlv .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#bqvfizzxlv .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#bqvfizzxlv .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#bqvfizzxlv .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bqvfizzxlv .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#bqvfizzxlv .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bqvfizzxlv .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#bqvfizzxlv .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bqvfizzxlv .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bqvfizzxlv .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bqvfizzxlv .gt_left {\n  text-align: left;\n}\n\n#bqvfizzxlv .gt_center {\n  text-align: center;\n}\n\n#bqvfizzxlv .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#bqvfizzxlv .gt_font_normal {\n  font-weight: normal;\n}\n\n#bqvfizzxlv .gt_font_bold {\n  font-weight: bold;\n}\n\n#bqvfizzxlv .gt_font_italic {\n  font-style: italic;\n}\n\n#bqvfizzxlv .gt_super {\n  font-size: 65%;\n}\n\n#bqvfizzxlv .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#bqvfizzxlv .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#bqvfizzxlv .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#bqvfizzxlv .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#bqvfizzxlv .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#bqvfizzxlv .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#bqvfizzxlv .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#bqvfizzxlv .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#bqvfizzxlv div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\" \"> </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"Outcomes (Per Game)\">\n        <span class=\"gt_column_spanner\">Outcomes (Per Game)</span>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Points\">Points</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"xG Difference\">xG Difference</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Goal Difference\">Goal Difference</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"&lt;div data-qmd-base64=&quot;KipQb3B1bGF0aW9uLUxldmVsIEVmZmVjdHMqKg==&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;Population-Level Effects&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipQb3B1bGF0aW9uLUxldmVsIEVmZmVjdHMqKg==\"><div class='gt_from_md'><p><strong>Population-Level Effects</strong></p>\n</div></div></th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\">(Intercept)</td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\">1.62</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\">0.00</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\">0.38</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\"></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\" style=\"font-size: medium;\">[1.44, 1.79]</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\" style=\"font-size: medium;\">[-0.24, 0.24]</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\" style=\"font-size: medium;\">[0.10, 0.65]</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\">Squad Value<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\">0.49</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\">0.54</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\">0.76</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\"></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\" style=\"font-size: medium;\">[0.44, 0.55]</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\" style=\"font-size: medium;\">[0.44, 0.65]</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\" style=\"font-size: medium;\">[0.69, 0.83]</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\">Time (Seasons)<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>2</sup></span></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\">-0.05</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\">-0.02</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\">-0.07</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\"></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\" style=\"font-size: medium;\">[-0.06, -0.04]</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\" style=\"font-size: medium;\">[-0.04, -0.01]</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\" style=\"font-size: medium;\">[-0.09, -0.06]</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"&lt;div data-qmd-base64=&quot;KipHcm91cCBFZmZlY3RzKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;Group Effects&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipHcm91cCBFZmZlY3RzKio=\"><div class='gt_from_md'><p><strong>Group Effects</strong></p>\n</div></div></th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X0NsdWJfOiBTbG9wZSBWYXJpYW5jZQ==\"><div class='gt_from_md'><p><em>Club</em>: Slope Variance</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.08</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">0.14</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.14</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X0xlYWd1ZV86IEludGVyY2VwdCBWYXJpYW5jZQ==\"><div class='gt_from_md'><p><em>League</em>: Intercept Variance</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.19</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">0.23</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.29</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X0xlYWd1ZV86IFNsb3BlIFZhcmlhbmNl\"><div class='gt_from_md'><p><em>League</em>: Slope Variance</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.05</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">0.11</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.07</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X1NlYXNvbl86IEludGVyY2VwdCBWYXJpYW5jZQ==\"><div class='gt_from_md'><p><em>Season</em>: Intercept Variance</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.06</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">0.03</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.09</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\" style=\"border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;\"><div data-qmd-base64=\"UmVzaWR1YWwgVmFyaWFuY2U=\"><div class='gt_from_md'><p>Residual Variance</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\" style=\"border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;\">0.23</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\" style=\"border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;\">0.25</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\" style=\"border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;\">0.33</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_empty_group_heading\" scope=\"colgroup\" id=\"\"></th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"NA   \" class=\"gt_row gt_left\">Num.Obs.</td>\n<td headers=\"NA  Points\" class=\"gt_row gt_center\">1174</td>\n<td headers=\"NA  xG Difference\" class=\"gt_row gt_center\">684</td>\n<td headers=\"NA  Goal Difference\" class=\"gt_row gt_center\">1174</td></tr>\n    <tr><td headers=\"NA   \" class=\"gt_row gt_left\">RMSE</td>\n<td headers=\"NA  Points\" class=\"gt_row gt_center\">0.22</td>\n<td headers=\"NA  xG Difference\" class=\"gt_row gt_center\">0.24</td>\n<td headers=\"NA  Goal Difference\" class=\"gt_row gt_center\">0.32</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" style=\"text-align: left;\" colspan=\"4\">Source: FBref &amp; Transfermarkt Via {worldfootballR}</td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" style=\"text-align: left;\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span> Market value log-transformed and centred around grand mean.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" style=\"text-align: left;\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>2</sup></span> Time represented as integers 0-11 where 2012/13 = 0 and 2022/23 = 11.</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\nAs squad value has been log-transformed (and centred), the coefficients aren't easy to interpret, besides the direction of the effect. A log-transformed explanatory variable that has been fit to an outcome that has not been transformed is interpreted as every additional 1% increase in the squad value leads to a x/100 increase in the outcome, and in this case multiplied by 38 to capture the estimated increase over an entire Premier League season. \n\nEvery 1% increase in squad value (which is an increase of ~â‚¬2.37m) leads to a 0.19 increase in points in a season, 0.2 increase in xG difference, and 0.29 increase in goal difference. For further context, every 10% increase in squad value (which is an increase of ~â‚¬23.7m) leads to a 1.9 increase in points, a 2.0 increase in xG difference, and a 2.9 increase in goal difference. These differences are relatively small, but if a â‚¬25m player can add around two points to a team's points total, that could be the difference between a relegation candidate staying up or not!\n\n[^MLMs]:\n\n    There are lots of different names for all these different types of models, just as there are lots of different names for multilevel models too. The names I'm using \n    here definitely aren't the catchiest, but I think they are the most intuitive, and terminology that gives practitioners and readers no hint at what they mean is a \n    common problem with multilevel models, so I'm going to stick with the intuitive option. For a brief overview of these different types of grouping structures, check \n    out the [Multilevel Models Cheatsheet](https://paulrjohnson.net/blog/2022-11-01-multilevel-model-r-cheatsheet/) I put together a couple years ago. \n\n[^Null]:\n\n    I have already fit a null model to compute the intracluster correlation coefficient (ICC), which can be thought of as a coefficient that estimates the variance \n    explained by a grouping structure. While the leagues and seasons explain a small amount of the outcome variance, the teams explain between ~65% to ~75%. I think we \n    could easily get away with fitting a model only using the teams as the grouping structure, however, given that we know that these other levels exist and will naturally \n    constrain the outcomes, I think it makes sense to include them nonetheless.\n\n[^Structures]:\n\n    Nested and crossed grouping structures are another example of the flexibility and complexity that can be specified in a multilevel model. They describe the way that \n    grouping structures relate to each other when there are three or more hierarchical levels in the data. Grouping structures are nested when a lower level grouping is \n    entirely contained within another higher level grouping, meaning that each of the lower level groups belongs to only one of the higher level groups. For example, the \n    clubs in the data we are using are entirely nested within their league. Manchester United have never broken out of their containment and run loose in the Bundesliga \n    (and while teams can be relegate, the lower tiers are not included in this data). Grouping structures are crossed, on the other hand, when the lower level grouping is \n    not contained entirely within the higher level grouping. The lower level groups can belong to any of the higher level groups (and multiple groups) when they are crossed. \n    Seasons are crossed with leagues and teams because both can belong to every one of the seasons (and in the case of the leagues, they **do** belong to each season). \n    \n[^Singularity]:\n\n    Singularity occurs when a component of the model's variance-covariance matrix is effectively zero, due to a very high multicollinearity or because the parameter is \n    zero [@shaw2022]. In this case, it is likely due to the complexity of the model, with two nested grouping structures and a crossed grouping. The league grouping does\n    add something to the model, but it will definitely be contributing a lot of the same information that the team grouping does, and the model struggles to parse this. \n    With more data I think this problem would be resolved, but collecting more data would be a nuisance at this point, and with a bit of investigation, this approach seems\n    both defensible and better than alternative model specifications.\n\n### Predicting League Points\n\nWhile transforming the coefficients gives us more information than the raw coefficients themselves, it's still a little difficult to place this in any particularly useful context. Instead, computing predictions using the fitted multilevel model will tell us more. I will focus on league points because I think that's a little more interesting than looking at goal or xG difference^[Watch the games, spreadsheet nerds!].\n\n![](arrested-development.jpg){fig-align=\"center\" width=60%}\n\nWe can start by computing marginal predicted league points as squad values increase. The season (and time) is held at 2023/24, so that the predictions are based on the most current data. Marginal predictions calculate the average predictions across all groups (leagues and teams).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\noverall_preds <- \n  function(data) {\n    ggeffects::predict_response(\n      data,\n      terms = c(\"squad_value[n=250]\"),\n      condition = c(season = \"2023/24\", time = 11),\n      margin = \"empirical\"\n    )\n  }\n\nmodels |>\n  filter(outcome == \"Points\") |> \n  select(outcome, data, model) |> \n  rowwise() |> \n  mutate(preds = list(overall_preds(model))) |> \n  tidyr::unnest(preds) |> \n  mutate(\n    x = exp(x + mean(log(club_resources$squad_value))),\n    across(c(predicted, std.error, conf.low, conf.high), ~ .x * 38)\n    ) |> \n  ggplot(aes(x, predicted)) +\n  geom_line(linewidth = 1.2) + # colour = \"#026E99\"\n  geom_line(aes(y = conf.low), linewidth = 0.8, linetype = 2) +\n  geom_line(aes(y = conf.high), linewidth = 0.8, linetype = 2) +\n  scale_x_continuous(\n    labels = \n      scales::label_number(scale_cut = scales::cut_short_scale(), prefix = \"â‚¬\")\n    ) +\n  labs(\n    title = \"Marginal Predicted Points by Squad Value\",\n    x = \"Squad Value\", y = \"Predicted Points\",\n    caption =\n      \"Visualisation: Paul Johnson | Data: Transfermarkt Via {worldfootballR}\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/overall-preds-1.png){width=672}\n:::\n:::\n\n\n\nThe marginal gains for increases in squad value are the largest at the lower end of the values, appearing to start flattening out before the â‚¬250m point.\n\nWe can also compare how increases in squad value change the total predicted points for teams in each league. Here, we will use the conditional predictions, which calculate the effect of increases in squad values for an average team in each league (in the 2023/24 season), plotted below[^CIs]. I think it makes sense to use the marginal predictions when averaging across all leagues, because the \"typical\" team in the top five leagues feels a little too abstract, while averaging across all teams and leagues feels easier to understand. In this case, I think the typical team in each of the leagues is easily interpretable.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nleague_preds <- \n  function(data) {\n    ggeffects::predict_response(\n      data,\n      terms = c(\"squad_value[n=250]\", \"league\"),\n      condition = c(season = \"2023/24\", time = 11),\n      type = \"random\"\n    )\n  }\n\nmodels |>\n  filter(outcome == \"Points\") |> \n  select(data, model) |> \n  rowwise() |> \n  mutate(preds = list(league_preds(model))) |> \n  tidyr::unnest(preds) |> \n  tibble() |> \n  mutate(\n    x = exp(x + mean(log(club_resources$squad_value))),\n    across(\n      c(predicted, std.error, conf.low, conf.high),\n      ~ case_when(\n        group %in% c(\"Bundesliga\", \"Ligue 1\") ~ .x * 34,\n        group %in% c(\"Premier League\", \"La Liga\", \"Serie A\") ~ .x * 38\n        )\n      )\n    ) |> \n  ggplot(aes(x, predicted, colour = group)) +\n  geom_smooth(\n    method = lm, formula = y ~ log(x), se = FALSE, alpha = .8, linewidth = 1.2\n    ) +\n  scale_colour_manual(values = c(\"#7AB5CC\", \"#026E99\", \"#FFA600\", \"#D93649\", \"#8C3431\")) +\n  scale_x_continuous(\n    labels = \n      scales::label_number(scale_cut = scales::cut_short_scale(), prefix = \"â‚¬\")\n    ) +\n  labs(\n    title = \"Conditional Predicted Points by Squad Value in the Top Five Leagues\",\n    x = \"Squad Value\", y = \"Predicted Points\",\n    caption =\n      \"Visualisation: Paul Johnson | Data: Transfermarkt Via {worldfootballR}\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/league-preds-1.png){width=672}\n:::\n:::\n\n\n\nThe effects are broadly pretty similar, but the interesting details are in the margins. The Premier League intercept is quite a bit lower than the other four leagues, which is to be expected because the average value is much higher and therefore the base level required to win any points at all (and to even make it to the Premier League) is higher. It also appears that increases in squad values are less valuable at the lower end of the range, where there are quite sharp increases in the predicted points for the other four leagues (especially Serie A). However, while all five leagues see less and less gains in further increases in squad values as they reach the more expensive end, it looks like the other four leagues flatten out a little more (with the possible exception of Serie A), the Premier League appears to catch the others up. \n\nIt's also worth noting that Ligue 1 and the Bundesliga have four fewer games per season, so the amount that can be gained in those leagues should flatten out a little more because there are fewer points available.\n\n[^CIs]: \n\n    The prediction intervals haven't been included here because the standard errors are consistent across the leagues. There is no additional information to be gained, \n    but you _can_ make a big mess by overlaying multiple intervals on top of each other like that.\n\n#### Identifying Performance Above/Below Expectations\n\nAll this is very interesting, but the real question is, \"Which teams have wasted their money more than everyone else?\"\n\nWe can compute the predicted points for each team and compare these predictions against their actual points totals each season. Below, I've plotted the performance above/below expectations of the Premier League's \"top six\", from 2012/13 to 2023/24.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nmodels |>\n  filter(outcome == \"Points\") |> \n  tidyr::unnest(c(data, preds)) |> \n  mutate(\n    value = value * mp,\n    preds = round(preds * mp)\n    ) |> \n  tidyr::pivot_longer(\n    cols = c(value, preds), names_to = \"type\", values_to = \"points\"\n    ) |> \n  mutate(\n    type = \n      case_when(\n        type == \"value\" ~ \"Total Points\",\n        type == \"preds\" ~ \"Predicted Points\",\n        .default = type\n      )\n    # season = stringr::str_sub(season, 3, -1)\n    ) |> \n  filter(\n    squad %in% c(\n      \"Manchester City\", \"Manchester Utd\", \"Liverpool\", \n      \"Arsenal\", \"Chelsea\", \"Tottenham\"\n      )\n    ) |>\n  ggplot(aes(season, points, group = type, linetype = type)) +\n  geom_smooth(\n    method = lm, formula = y ~ splines::ns(x, 3), \n    linewidth = 0.5, se = FALSE, colour = \"#343a40\"\n    ) +\n  geom_point(aes(fill = type), shape = 21, size = 1.2, stroke = 1) +\n  guides(fill = guide_legend(override.aes = list(size = 2))) + \n  scale_fill_manual(values = c(\"white\", \"#343a40\")) +\n  scale_linetype_manual(values = c(\"dashed\", \"solid\")) +\n  scale_x_discrete(\n    expand = c(0.05, 0.05), \n    breaks = c(\"2013/14\", \"2015/16\", \"2017/18\", \"2019/20\", \"2021/22\", \"2023/24\")\n    ) +\n  facet_wrap(facets = vars(squad), nrow = 3) +\n  labs(\n    title = \"Premier League Top Six Performance Above/Below Expectations\",\n    subtitle = \n      stringr::str_wrap(\n        glue::glue(\n          \"Comparing Arsenal, Chelsea, Liverpool, Man City, Man Utd, & Spurs' total \",\n          \"and predicted points in the Premier League from 2012/23 to 2023/24, \",\n          \"conditional on each club's total market value and net spend per season.\"\n          ),\n        width = 95\n      ),\n    x = NULL, y = NULL,\n    caption = \n      \"Visualisation: Paul Johnson | Data: Transfermarkt Via {worldfootballR}\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/top-six-1.png){width=672}\n:::\n:::\n\n\n\nI think these results are, for the most part, aligned with what I would have expected. The obvious exception is Manchester United. In the early years, when Alex Ferguson was still around, they're still performing above expectations, but I would have expected to see them decline significantly since then, not just in terms of the expectations, but also performing significantly below expectations. In fact, United have spent much of this time as the poster child for performing below expectations for a team that spends so much money on their squad.\n\nI have also plotted the performances of four more teams which I have generously referred to as \"challengers\" (as in these teams have at points challenged the top six and experienced varying fortunes since)[^Saints].\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nmodels |>\n  filter(outcome == \"Points\") |> \n  tidyr::unnest(c(data, preds)) |> \n  mutate(\n    value = value * mp,\n    preds = round(preds * mp)\n    ) |>  \n  tidyr::pivot_longer(\n    cols = c(value, preds), names_to = \"type\", values_to = \"points\"\n    ) |> \n  mutate(\n    type = \n      case_when(\n        type == \"value\" ~ \"Total Points\",\n        type == \"preds\" ~ \"Predicted Points\",\n        .default = type\n      )\n    # season = stringr::str_sub(season, 3, -1)\n    ) |> \n  filter(\n    squad %in% c(\n      \"Brighton\", \"Everton\", \"Leicester City\", \"Southampton\"\n      )\n    ) |>\n  ggplot(aes(season, points, group = type, linetype = type)) +\n  geom_smooth(\n    method = lm, formula = y ~ splines::ns(x, 3), \n    linewidth = 0.5, se = FALSE, colour = \"#343a40\"\n    ) +\n  geom_point(aes(fill = type), shape = 21, size = 1.2, stroke = 1) +\n  guides(fill = guide_legend(override.aes = list(size = 2))) + \n  scale_fill_manual(values = c(\"white\", \"#343a40\")) +\n  scale_linetype_manual(values = c(\"dashed\", \"solid\")) +\n  scale_x_discrete(\n    expand = c(0.05, 0.05),\n    #limits = club_resources$season,\n    breaks = c(\"2013/14\", \"2015/16\", \"2017/18\", \"2019/20\", \"2021/22\", \"2023/24\")\n    ) +\n  facet_wrap(facets = vars(squad), nrow = 2, scales = \"free_x\") +\n  labs(\n    title = \"Premier League Challengers' Performance Above/Below Expectations\",\n    subtitle = \n      stringr::str_wrap(\n        glue::glue(\n          \"Comparing Brighton, Everton, Leicester, Southampton's  total \",\n          \"and predicted points in the Premier League from 2012/23 to 2023/24, \",\n          \"conditional on each club's total market value and net spend per season.\"\n          ),\n        width = 95\n      ),\n    x = NULL, y = NULL,\n    caption = \n      \"Visualisation: Paul Johnson | Data: Transfermarkt Via {worldfootballR}\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/challengers-1.png){width=672}\n:::\n:::\n\n\n\nWe see a little more wild swings here, particularly in Leicester's case. Unsurprising as a team that won the Premier League despite barely surviving relegation the season before and then spending a few years challenging for Europe only to get themselves relegated a couple seasons ago with a team that shouldn't have been anywhere near the bottom three. Southampton and Everton have also experienced quite big swings, and big declines in recent seasons. Brighton, interestingly, haven't massively overperformed. \n\n[^Saints]:\n\n    In reality I just wanted an excuse to add Southampton to this blog post.\n\n##### The Biggest Over & Underperformers\n\nLets wrap this up by sorting the penny wise from the (billion) pound foolish! Which teams have performed above or below expectations more than anyone else? @tbl-overperformers and @tbl-underperformers include the top three teams in each league in terms of overperformance and underperformance, calculating each team's total predicted points as a percentage above or below their total points, respectively. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Function Code (Click to Expand)\"}\nperformance_table <-\n  function(min_max) {\n    models |>\n      filter(outcome == \"Points\") |>\n      tidyr::unnest(c(data, preds)) |>\n      filter(n() > 3, .by = squad) |>\n      mutate(\n        value = value * mp,\n        preds = round(preds * mp)\n        ) |>\n      summarise(\n        mp = sum(mp),\n        avg_ppg = sum(value)/mp,\n        pred_ppg = sum(preds)/mp,\n        pct_diff = ((avg_ppg / pred_ppg) - 1) * 100,\n        .by = c(squad, league)\n        ) |>\n      min_max(order_by = pct_diff, n = 3, by = league) |>\n      select(squad, league, avg_ppg, pred_ppg, pct_diff) |> \n      gt(groupname_col = \"league\", rowname_col = \"squad\") |>\n      cols_label(\n        avg_ppg = \"Average\",\n        pred_ppg = \"Predicted\",\n        pct_diff ~ \"Over/Under (%)\"\n        ) |>\n      tab_spanner(\n        label = \"Points Per Game\",\n        columns = c(avg_ppg, pred_ppg)\n        ) |> \n      fmt_number(columns = c(avg_ppg, pred_ppg, pct_diff), decimals = 2) |> \n      # fmt_percent(columns = pct_diff) |>\n      cols_align(align = \"center\", columns = c(avg_ppg, pred_ppg, pct_diff)) |>\n      tab_style(\n        style = cell_text(weight = \"bold\"),\n        locations = cells_row_groups()\n      ) |>\n      tbl_theme()\n  }\n```\n:::\n\n\n\n::: {.panel-tabset}\n\n###### Overperformers\n\n\n\n::: {#tbl-overperformers .cell tbl-cap='The Biggest Overperformers in the Big Five Leagues'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Table Code (Click to Expand)\"}\nperformance_table(slice_max)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"vkyfqtsmyt\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#vkyfqtsmyt table {\n  font-family: Poppins;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#vkyfqtsmyt thead, #vkyfqtsmyt tbody, #vkyfqtsmyt tfoot, #vkyfqtsmyt tr, #vkyfqtsmyt td, #vkyfqtsmyt th {\n  border-style: none;\n}\n\n#vkyfqtsmyt p {\n  margin: 0;\n  padding: 0;\n}\n\n#vkyfqtsmyt .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#vkyfqtsmyt .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vkyfqtsmyt .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vkyfqtsmyt .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vkyfqtsmyt .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vkyfqtsmyt .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vkyfqtsmyt .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vkyfqtsmyt .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vkyfqtsmyt .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#vkyfqtsmyt .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#vkyfqtsmyt .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vkyfqtsmyt .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vkyfqtsmyt .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vkyfqtsmyt .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vkyfqtsmyt .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vkyfqtsmyt .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vkyfqtsmyt .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vkyfqtsmyt .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#vkyfqtsmyt .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vkyfqtsmyt .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vkyfqtsmyt .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vkyfqtsmyt .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vkyfqtsmyt .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vkyfqtsmyt .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vkyfqtsmyt .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vkyfqtsmyt .gt_left {\n  text-align: left;\n}\n\n#vkyfqtsmyt .gt_center {\n  text-align: center;\n}\n\n#vkyfqtsmyt .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vkyfqtsmyt .gt_font_normal {\n  font-weight: normal;\n}\n\n#vkyfqtsmyt .gt_font_bold {\n  font-weight: bold;\n}\n\n#vkyfqtsmyt .gt_font_italic {\n  font-style: italic;\n}\n\n#vkyfqtsmyt .gt_super {\n  font-size: 65%;\n}\n\n#vkyfqtsmyt .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#vkyfqtsmyt .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vkyfqtsmyt .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vkyfqtsmyt .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vkyfqtsmyt .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vkyfqtsmyt .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vkyfqtsmyt .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#vkyfqtsmyt .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#vkyfqtsmyt div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Points Per Game\">\n        <span class=\"gt_column_spanner\">Points Per Game</span>\n      </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"Over/Under (%)\">Over/Under (%)</th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Average\">Average</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Predicted\">Predicted</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Premier League\">Premier League</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Burnley</th>\n<td headers=\"Premier League stub_1_1 avg_ppg\" class=\"gt_row gt_center\">1.05</td>\n<td headers=\"Premier League stub_1_1 pred_ppg\" class=\"gt_row gt_center\">0.98</td>\n<td headers=\"Premier League stub_1_1 pct_diff\" class=\"gt_row gt_center\">7.05</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Leicester City</th>\n<td headers=\"Premier League stub_1_2 avg_ppg\" class=\"gt_row gt_center\">1.40</td>\n<td headers=\"Premier League stub_1_2 pred_ppg\" class=\"gt_row gt_center\">1.33</td>\n<td headers=\"Premier League stub_1_2 pct_diff\" class=\"gt_row gt_center\">5.04</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Stoke City</th>\n<td headers=\"Premier League stub_1_3 avg_ppg\" class=\"gt_row gt_center\">1.20</td>\n<td headers=\"Premier League stub_1_3 pred_ppg\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"Premier League stub_1_3 pct_diff\" class=\"gt_row gt_center\">4.18</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"La Liga\">La Liga</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">CÃ¡diz</th>\n<td headers=\"La Liga stub_1_4 avg_ppg\" class=\"gt_row gt_center\">1.04</td>\n<td headers=\"La Liga stub_1_4 pred_ppg\" class=\"gt_row gt_center\">0.89</td>\n<td headers=\"La Liga stub_1_4 pct_diff\" class=\"gt_row gt_center\">16.18</td></tr>\n    <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Girona</th>\n<td headers=\"La Liga stub_1_5 avg_ppg\" class=\"gt_row gt_center\">1.43</td>\n<td headers=\"La Liga stub_1_5 pred_ppg\" class=\"gt_row gt_center\">1.24</td>\n<td headers=\"La Liga stub_1_5 pct_diff\" class=\"gt_row gt_center\">15.96</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Eibar</th>\n<td headers=\"La Liga stub_1_6 avg_ppg\" class=\"gt_row gt_center\">1.14</td>\n<td headers=\"La Liga stub_1_6 pred_ppg\" class=\"gt_row gt_center\">1.07</td>\n<td headers=\"La Liga stub_1_6 pct_diff\" class=\"gt_row gt_center\">6.34</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Ligue 1\">Ligue 1</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Lens</th>\n<td headers=\"Ligue 1 stub_1_7 avg_ppg\" class=\"gt_row gt_center\">1.52</td>\n<td headers=\"Ligue 1 stub_1_7 pred_ppg\" class=\"gt_row gt_center\">1.35</td>\n<td headers=\"Ligue 1 stub_1_7 pct_diff\" class=\"gt_row gt_center\">12.75</td></tr>\n    <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Stade Brest</th>\n<td headers=\"Ligue 1 stub_1_8 avg_ppg\" class=\"gt_row gt_center\">1.20</td>\n<td headers=\"Ligue 1 stub_1_8 pred_ppg\" class=\"gt_row gt_center\">1.14</td>\n<td headers=\"Ligue 1 stub_1_8 pct_diff\" class=\"gt_row gt_center\">4.90</td></tr>\n    <tr><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Bastia</th>\n<td headers=\"Ligue 1 stub_1_9 avg_ppg\" class=\"gt_row gt_center\">1.19</td>\n<td headers=\"Ligue 1 stub_1_9 pred_ppg\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"Ligue 1 stub_1_9 pct_diff\" class=\"gt_row gt_center\">4.13</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Bundesliga\">Bundesliga</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Union Berlin</th>\n<td headers=\"Bundesliga stub_1_10 avg_ppg\" class=\"gt_row gt_center\">1.43</td>\n<td headers=\"Bundesliga stub_1_10 pred_ppg\" class=\"gt_row gt_center\">1.16</td>\n<td headers=\"Bundesliga stub_1_10 pct_diff\" class=\"gt_row gt_center\">22.73</td></tr>\n    <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Freiburg</th>\n<td headers=\"Bundesliga stub_1_11 avg_ppg\" class=\"gt_row gt_center\">1.31</td>\n<td headers=\"Bundesliga stub_1_11 pred_ppg\" class=\"gt_row gt_center\">1.26</td>\n<td headers=\"Bundesliga stub_1_11 pct_diff\" class=\"gt_row gt_center\">4.26</td></tr>\n    <tr><th id=\"stub_1_12\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Bayern Munich</th>\n<td headers=\"Bundesliga stub_1_12 avg_ppg\" class=\"gt_row gt_center\">2.38</td>\n<td headers=\"Bundesliga stub_1_12 pred_ppg\" class=\"gt_row gt_center\">2.32</td>\n<td headers=\"Bundesliga stub_1_12 pct_diff\" class=\"gt_row gt_center\">2.75</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Serie A\">Serie A</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_13\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Chievo</th>\n<td headers=\"Serie A stub_1_13 avg_ppg\" class=\"gt_row gt_center\">1.03</td>\n<td headers=\"Serie A stub_1_13 pred_ppg\" class=\"gt_row gt_center\">0.97</td>\n<td headers=\"Serie A stub_1_13 pct_diff\" class=\"gt_row gt_center\">6.61</td></tr>\n    <tr><th id=\"stub_1_14\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Lazio</th>\n<td headers=\"Serie A stub_1_14 avg_ppg\" class=\"gt_row gt_center\">1.72</td>\n<td headers=\"Serie A stub_1_14 pred_ppg\" class=\"gt_row gt_center\">1.65</td>\n<td headers=\"Serie A stub_1_14 pct_diff\" class=\"gt_row gt_center\">4.24</td></tr>\n    <tr><th id=\"stub_1_15\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Empoli</th>\n<td headers=\"Serie A stub_1_15 avg_ppg\" class=\"gt_row gt_center\">1.05</td>\n<td headers=\"Serie A stub_1_15 pred_ppg\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"Serie A stub_1_15 pct_diff\" class=\"gt_row gt_center\">4.12</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" style=\"text-align: left;\" colspan=\"4\">Source: FBref &amp; Transfermarkt Via {worldfootballR}</td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n###### Underperformers\n\n\n\n::: {#tbl-underperformers .cell tbl-cap='The Biggest Underperformers in the Big Five Leagues'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Table Code (Click to Expand)\"}\nperformance_table(slice_min)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"naghrbduey\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#naghrbduey table {\n  font-family: Poppins;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#naghrbduey thead, #naghrbduey tbody, #naghrbduey tfoot, #naghrbduey tr, #naghrbduey td, #naghrbduey th {\n  border-style: none;\n}\n\n#naghrbduey p {\n  margin: 0;\n  padding: 0;\n}\n\n#naghrbduey .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#naghrbduey .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#naghrbduey .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#naghrbduey .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#naghrbduey .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#naghrbduey .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#naghrbduey .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#naghrbduey .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#naghrbduey .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#naghrbduey .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#naghrbduey .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#naghrbduey .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#naghrbduey .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#naghrbduey .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#naghrbduey .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#naghrbduey .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#naghrbduey .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#naghrbduey .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#naghrbduey .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#naghrbduey .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#naghrbduey .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#naghrbduey .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#naghrbduey .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#naghrbduey .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#naghrbduey .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#naghrbduey .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#naghrbduey .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#naghrbduey .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#naghrbduey .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#naghrbduey .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#naghrbduey .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#naghrbduey .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#naghrbduey .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#naghrbduey .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#naghrbduey .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#naghrbduey .gt_left {\n  text-align: left;\n}\n\n#naghrbduey .gt_center {\n  text-align: center;\n}\n\n#naghrbduey .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#naghrbduey .gt_font_normal {\n  font-weight: normal;\n}\n\n#naghrbduey .gt_font_bold {\n  font-weight: bold;\n}\n\n#naghrbduey .gt_font_italic {\n  font-style: italic;\n}\n\n#naghrbduey .gt_super {\n  font-size: 65%;\n}\n\n#naghrbduey .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#naghrbduey .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#naghrbduey .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#naghrbduey .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#naghrbduey .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#naghrbduey .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#naghrbduey .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#naghrbduey .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#naghrbduey div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Points Per Game\">\n        <span class=\"gt_column_spanner\">Points Per Game</span>\n      </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"Over/Under (%)\">Over/Under (%)</th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Average\">Average</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Predicted\">Predicted</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Premier League\">Premier League</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Norwich City</th>\n<td headers=\"Premier League stub_1_1 avg_ppg\" class=\"gt_row gt_center\">0.81</td>\n<td headers=\"Premier League stub_1_1 pred_ppg\" class=\"gt_row gt_center\">0.93</td>\n<td headers=\"Premier League stub_1_1 pct_diff\" class=\"gt_row gt_center\">âˆ’12.99</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Sunderland</th>\n<td headers=\"Premier League stub_1_2 avg_ppg\" class=\"gt_row gt_center\">0.94</td>\n<td headers=\"Premier League stub_1_2 pred_ppg\" class=\"gt_row gt_center\">1.05</td>\n<td headers=\"Premier League stub_1_2 pct_diff\" class=\"gt_row gt_center\">âˆ’11.00</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Fulham</th>\n<td headers=\"Premier League stub_1_3 avg_ppg\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"Premier League stub_1_3 pred_ppg\" class=\"gt_row gt_center\">1.11</td>\n<td headers=\"Premier League stub_1_3 pct_diff\" class=\"gt_row gt_center\">âˆ’9.52</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"La Liga\">La Liga</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Deportivo de La CoruÃ±a</th>\n<td headers=\"La Liga stub_1_4 avg_ppg\" class=\"gt_row gt_center\">0.93</td>\n<td headers=\"La Liga stub_1_4 pred_ppg\" class=\"gt_row gt_center\">1.04</td>\n<td headers=\"La Liga stub_1_4 pct_diff\" class=\"gt_row gt_center\">âˆ’10.15</td></tr>\n    <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">AlmerÃ­a</th>\n<td headers=\"La Liga stub_1_5 avg_ppg\" class=\"gt_row gt_center\">0.86</td>\n<td headers=\"La Liga stub_1_5 pred_ppg\" class=\"gt_row gt_center\">0.94</td>\n<td headers=\"La Liga stub_1_5 pct_diff\" class=\"gt_row gt_center\">âˆ’8.39</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Las Palmas</th>\n<td headers=\"La Liga stub_1_6 avg_ppg\" class=\"gt_row gt_center\">0.95</td>\n<td headers=\"La Liga stub_1_6 pred_ppg\" class=\"gt_row gt_center\">1.04</td>\n<td headers=\"La Liga stub_1_6 pct_diff\" class=\"gt_row gt_center\">âˆ’8.23</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Ligue 1\">Ligue 1</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Troyes</th>\n<td headers=\"Ligue 1 stub_1_7 avg_ppg\" class=\"gt_row gt_center\">0.79</td>\n<td headers=\"Ligue 1 stub_1_7 pred_ppg\" class=\"gt_row gt_center\">0.88</td>\n<td headers=\"Ligue 1 stub_1_7 pct_diff\" class=\"gt_row gt_center\">âˆ’10.18</td></tr>\n    <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Toulouse</th>\n<td headers=\"Ligue 1 stub_1_8 avg_ppg\" class=\"gt_row gt_center\">1.11</td>\n<td headers=\"Ligue 1 stub_1_8 pred_ppg\" class=\"gt_row gt_center\">1.17</td>\n<td headers=\"Ligue 1 stub_1_8 pct_diff\" class=\"gt_row gt_center\">âˆ’5.59</td></tr>\n    <tr><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Metz</th>\n<td headers=\"Ligue 1 stub_1_9 avg_ppg\" class=\"gt_row gt_center\">0.95</td>\n<td headers=\"Ligue 1 stub_1_9 pred_ppg\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"Ligue 1 stub_1_9 pct_diff\" class=\"gt_row gt_center\">âˆ’4.76</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Bundesliga\">Bundesliga</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Hamburger SV</th>\n<td headers=\"Bundesliga stub_1_10 avg_ppg\" class=\"gt_row gt_center\">1.08</td>\n<td headers=\"Bundesliga stub_1_10 pred_ppg\" class=\"gt_row gt_center\">1.18</td>\n<td headers=\"Bundesliga stub_1_10 pct_diff\" class=\"gt_row gt_center\">âˆ’8.71</td></tr>\n    <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Schalke</th>\n<td headers=\"Bundesliga stub_1_11 avg_ppg\" class=\"gt_row gt_center\">1.31</td>\n<td headers=\"Bundesliga stub_1_11 pred_ppg\" class=\"gt_row gt_center\">1.43</td>\n<td headers=\"Bundesliga stub_1_11 pct_diff\" class=\"gt_row gt_center\">âˆ’8.64</td></tr>\n    <tr><th id=\"stub_1_12\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Hannover 96</th>\n<td headers=\"Bundesliga stub_1_12 avg_ppg\" class=\"gt_row gt_center\">1.02</td>\n<td headers=\"Bundesliga stub_1_12 pred_ppg\" class=\"gt_row gt_center\">1.11</td>\n<td headers=\"Bundesliga stub_1_12 pct_diff\" class=\"gt_row gt_center\">âˆ’7.93</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Serie A\">Serie A</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_13\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Genoa</th>\n<td headers=\"Serie A stub_1_13 avg_ppg\" class=\"gt_row gt_center\">1.10</td>\n<td headers=\"Serie A stub_1_13 pred_ppg\" class=\"gt_row gt_center\">1.17</td>\n<td headers=\"Serie A stub_1_13 pct_diff\" class=\"gt_row gt_center\">âˆ’6.31</td></tr>\n    <tr><th id=\"stub_1_14\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Cagliari</th>\n<td headers=\"Serie A stub_1_14 avg_ppg\" class=\"gt_row gt_center\">1.04</td>\n<td headers=\"Serie A stub_1_14 pred_ppg\" class=\"gt_row gt_center\">1.09</td>\n<td headers=\"Serie A stub_1_14 pct_diff\" class=\"gt_row gt_center\">âˆ’4.82</td></tr>\n    <tr><th id=\"stub_1_15\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Palermo</th>\n<td headers=\"Serie A stub_1_15 avg_ppg\" class=\"gt_row gt_center\">0.96</td>\n<td headers=\"Serie A stub_1_15 pred_ppg\" class=\"gt_row gt_center\">1.01</td>\n<td headers=\"Serie A stub_1_15 pct_diff\" class=\"gt_row gt_center\">âˆ’4.58</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" style=\"text-align: left;\" colspan=\"4\">Source: FBref &amp; Transfermarkt Via {worldfootballR}</td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n:::\n\nThe biggest overperformer across all five leagues is Union Berlin, after their incredible run two seasons ago that saw them finish in the top four not long after getting promoted to Germany's top flight. CÃ¡diz, Girona, and Lens are Union's closest competitors (though none are that close). The race for Europe's biggest underperformer is a closer race, but that table is topped by Norwich City, followed by Sunderland, and Fulham, Deportivo de La CoruÃ±a, and Troyes are joint-third. \n\n## Wrapping Up\n\nI started this blog post unclear as to whether I was writing a multilevel regression tutorial using football data as the example, or an analysis of the money in football using a multilevel regression. I'm still not entirely sure which it is. Maybe this is a Choose Your Own Adventure blog post for nerds? Whichever adventure you chose, I hope you enjoyed it. And if you didn't, please don't write mean things about me on the Internet.\n\nIn the interest of overpromising and underdelivering, I have the lofty goals of a follow-up blog post that recreates (and builds on) what I've done here using Bayesian methods. It remains to be seen if that idea takes me two years to get round to finishing, like this one.\n\n## Acknowledgments {.appendix}\n\nPreview image by [Robert Anasch](https://unsplash.com/@diesektion) on [Unsplash](https://unsplash.com/photos/100-banknote-lot-Wnp7qnhHtyw).\n\n## Support {.appendix}\n\nIf you enjoyed this blog post and would like to support my work, you can [buy me a coffee or a beer or give me a tip](https://www.buymeacoffee.com/paulj1989) as a thank you. \n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}