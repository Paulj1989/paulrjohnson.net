{
  "hash": "46b6212de5afde9820c72bc962b702ea",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Analysing Money's Effect on Football Using Multilevel Regression\nsubtitle: |\n  What if I told you that we can use statistics to laugh at the silly football \n  teams too?\ndescription-meta: |\n  Developing a multilevel model to measure the effect of football (soccer) club \n  resources on league points, goals, and expected goals in Europe's big five \n  leagues.\ndate: 2024-10-09\nimage: money.webp\nimage-alt: |\n  A photograph of many â‚¬100 bank notes layered on top of each other.\ncategories: [Multilevel Regression, Statistics, R]\nbibliography: references.bib\n---\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Setup Code (Click to Expand)\"}\n# import packages\nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(lme4)\n  library(gt)\n  library(ggplot2)\n  library(marginaleffects)\n})\n\n# setup fonts\nsysfonts::font_add_google(\"Poppins\")\nsysfonts::font_add_google(\"Lora\")\nshowtext::showtext_auto()\n\n# set plot theme\n# inspired by https://github.com/z3tt/TidyTuesday/blob/main/R/2020_31_PalmerPenguins.Rmd\ntheme_set(theme_minimal(base_size = 20, base_family = \"Poppins\")) +\n  theme_update(\n    panel.grid.major = element_line(color = \"grey90\", linewidth = .4),\n    panel.grid.minor = element_blank(),\n    panel.spacing.x = unit(.65, units = \"cm\"),\n    panel.spacing.y = unit(.3, units = \"cm\"),\n    axis.title.x = element_text(\n      color = \"grey30\", margin = margin(t = 5), size = rel(1.05)\n      ),\n    axis.title.y = element_text(\n      color = \"grey30\", margin = margin(r = 5), size = rel(1.05)\n      ),\n    axis.text = element_text(color = \"grey50\", size = rel(1)),\n    axis.text.x = element_text(angle = 30, vjust = 1, hjust = .75),\n    axis.ticks = element_line(color = \"grey90\", linewidth = .4),\n    axis.ticks.length = unit(.2, \"lines\"),\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    legend.text = element_text(size = rel(.9)),\n    legend.box.margin = margin(0, 0, -10, 0),\n    legend.key.width = unit(1, units = \"cm\"),\n    plot.title = element_text(\n      hjust = 0, color = \"black\", family = \"Lora\",\n      size = rel(1.5), margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      hjust = 0, color = \"grey30\", family = \"Lora\",\n      lineheight = 0.5, size = rel(1.1), \n      margin = margin(5, 0, 5, 0)\n    ),\n    plot.title.position = \"plot\",\n    plot.caption = element_text(\n      color = \"grey50\", size = rel(0.8), hjust = 1,\n      margin = margin(10, 0, 0, 0)\n    ),\n    plot.caption.position = \"plot\",\n    plot.margin = margin(rep(10, 4)),\n    strip.text = element_text(size = rel(1), margin = margin(0, 0, 5, 0)),\n    strip.clip = \"off\"\n  )\n\n# set table theme\ntbl_theme <-\n  function(data, width = 100, alignment = \"center\") {\n    data |>\n      tab_source_note(\n        source_note = \"Source: FBref & Transfermarkt Via {worldfootballR}\"\n        ) |>\n      tab_options(\n        footnotes.marks = \"standard\",\n        footnotes.spec_ref = \"^xb\", \n        footnotes.spec_ftr = \"(x)\",\n        table.width = pct(width), \n        table.align = alignment,\n        table.font.names = \"Poppins\"\n        ) |> \n      tab_style(\n        style = cell_text(align = \"left\"),\n        locations = list(cells_source_notes(), cells_footnotes())\n        )\n  }\n\n# load data\nclub_resources <- \n  readr::read_rds(\n    here::here(\n      \"blog\", \"2024-10-09-analysing-money-in-football\", \n      \"data\", \"club_resources.rds\"\n      )\n  )\n```\n:::\n\n::: {.cell}\n<style type=\"text/css\">\n.rm-striping .gt_table tr.odd {\n  --bs-table-striped-bg: transparent;\n}\n</style>\n:::\n\n\n\nBuilding a brand is essential in many professional fields. When we finally decide to gig economise all the jobs in an attempt to achieve the goal of implementing a perfectly awful capitalist hellscape, the first to go will be the folks that were too busy \"being with their family\", \"seeing the world\", or \"living a rich and fulfilling life\" to build their **brand**. While some people are blessed with names like [Adam L. Ozer](https://adamlozer.github.io)[^Loser], those of us who were given names so generic that we are never more than ten metres away from a namesake have to work harder to distinguish ourselves. I could wear a hat, but that is a lot of upkeep. I'd have to buy the hat, then I'd have to wear it, and I assume I'd have to wash it sometimes, too. \n\nNo. That won't do. Building a brand around One Neat Trick is much easier. My One Neat Trick is multilevel models. I recommend them for most problems, usually long before I'm sure they are necessary. I assume that most problems will eventually reveal some multilevel data that justifies using a multilevel model. Once you've convinced yourself that this particular hammer _does_ turn everything into a nail, it's hard to roll that back. I'm fortunate that, in this case, I'm not far from the truth. It's good that I didn't pick Tobit regression[^Tobits]. \n\nSo when I was inspired to take a deeper look at the effect that financial resources have on outcomes in football because a [tweet](https://x.com/SBienkowski/status/1561464135279329280) had me mad on the Internet[^Tweet], I assumed it was probably going to be a multilevel model. I'm interested in understanding how much money impacts football and whether it all comes down to spending your way to the top. I have leveraged Transfermarkt's squad values as a proxy for a club's financial powers and used outcomes in Europe's big five leagues from 2012/13 to 2023/24 to estimate the effects of resources on league performance. The results suggest that having money is good and that teams with lots of money tend to be better at football (breathtaking insight); there's some relatively interesting nuance in there, too, so this blog post wasn't a complete waste of time. \n\nI'm still unsure if this blog post is more about multilevel regression or the money in football, but the beauty of running your own silly little blog is that you can write posts that meander aimlessly. If someone has the misfortune to read this, that's on them.\n\n[^Loser]:\n    \n    His name is Adam **LOSER**.\n    \n[^Tobits]:\n\n    Please don't @ me if you use Tobits all the time. ~~You're probably incredibly dull.~~ It's just a silly joke.\n\n[^Tweet]:\n\n    The eagle-eyed among you will notice that the tweet is over two years old. I haven't spent the last two years so seething with rage that I cannot concentrate on building\n    my silly little model that would prove Stefan wrong. I've just been kicking this idea around for a couple of years and have finally gotten around to finishing it off.\n\n## Multilevel Models for Multilevel Problems\n\nMultilevel models address problems caused by clustered (or multilevel) data in standard linear (and generalised linear) models, namely, the violation of the assumption of independence. \n\nThe independence assumption is a central tenet of regression modelling that states that all residuals in a model should be independent. When data is clustered, observations within clusters will be correlated, leading to residuals that are also correlated (and therefore not independent). Clustered data effectively inflates the sample size[^Dependence], and a model that fails to account for this will underestimate the standard errors of parameter estimates. These smaller standard errors give the appearance of certainty where certainty does not exist.\n\nMultilevel models handle clustered data and the correlation between observations within clusters by explicitly modelling the grouping structures in the data. Modelling the grouping structures allows us to fit models at the population level while accounting for the unexplained variance among the groups [@gelman2006], which produces more appropriate standard errors. \n\nSo, when you encounter multilevel data, you need a multilevel model!\n\n[^Dependence]:\n\n    Each observation is assumed to contribute equally independent information. Clustered data points, however, will be partially dependent, which makes some of the information \n    contributed by each point redundant. While the data may contain 100 observations, the information contributed will be equivalent to fewer independent observations.\n\n### The Prevalence of Multilevel Data\n\nMy first exposure to multilevel data came when researching political parties and party systems during my Political Science PhD. Being able to say anything meaningful and generalisable about political parties requires studying parties in many countries. It turns out every country is a special snowflake. Finding the golden nuggets of generalisable insight requires combining the valuable information across countries while acknowledging what makes countries and parties unique. Depending on the nature of the question being studied, many other ways exist to group political party data, including time, region, and party family.\n\nMultilevel data can come in various forms, but whenever you find clustering or groups in your data, this is a sign you're working with multilevel data. If you think that your data could be organised into groups for which observations within-group will be more similar to each other than they are to the rest of the observations, you should be thinking about the problems that arise from clustered data and how you might account for the grouping structures in your data. That doesn't necessarily have to mean a multilevel model, but multilevel models are certainly one of the best solutions.\n\nClustering is not just a quirk you occasionally observe in the real world. Multilevel data is ubiquitous. Many phenomena we might be interested in studying can be organised into groups. Multilevel data in the real world is so widespread that @mcelreath2017 argues that our starting assumption should be that any data has grouping structures that need to be accounted for and that multilevel regression should be our default choice.\n\n### Models with Memory...\n\nThe existence of clustering in your data complicates any attempts to model an outcome of interest at the population level, making it necessary to split the population-level variance (the variance across all observations without accounting for grouping structure) into two components - within-group variance (variance across observations within the same group) and between-group variance (variance across groups). The between-group variance estimates how much groups differ from each other, on average, and tells us how much group-level factors influence the outcome. In contrast, the within-group variance, the remainder of the population-level variance after group differences have been accounted for, estimates how much observations differ in a given group, telling us the population-level differences not explained by the group that observation belongs to.\n\nI think the most intuitive way to understand how multilevel models work, at a conceptual level, is that put forward by Richard McElreath [-@mcelreath2023] in the multilevel models chapter of his Statistical Rethinking lectures[^Rethinking] (embedded below). While the focus is on Bayesian methods, the early chapters of the video talk in general enough terms to apply to frequentist multilevel models, too. \n\n\n\n{{< video https://youtu.be/iwVqiiXYeC4?si=YmR8plIeBkQ2ufi5 >}}\n\n\n\n\n@mcelreath2023 describes multilevel models as \"models within models\". You do not fit multiple models simultaneously, but it can be helpful to think about a multilevel model as bringing together the information from models of the different levels at which variance exists. The population-level model (again, a \"model\" from a conceptual but not technical perspective) estimates population-level effects, much like a single-level model. In contrast, group-level sub-models estimate the group-specific deviations from the population-level effects. The population model serves as a jumping-off point for each sub-model, and in this sense, the population model gives what McElreath describes as \"a kind of memory\" when fitting the sub-models.\n\n[^Rethinking]:\n\n    I will borrow heavily from McElreath's approach to explaining multilevel models from Statistical Rethinking [-@mcelreath2018; -@mcelreath2023] because any attempt by me to \n    improve it will probably be a complete mess. If you find yourself thirsty for knowledge (about statistical modelling, including multilevel models), having read this blog \n    post, Statistical Rethinking (in either book or video form) is an excellent place to start.\n\n#### ...Learn Faster \n\nWhen dealing with clustered data, a single-level model that controls for the grouping structure in the data leaves information on the table by treating each group as entirely independent of each other. To continue to riff off McElreath's idea of model memory, a single-level model will forget everything it has learned whenever it switches clusters [@mcelreath2017]. However, clusters of the same type will have common features. For example, in a regression model that estimates how party members behave under certain conditions, party members will be clustered by the political party. While every political party will be different, there will also be inherent similarities that are very useful to factor into a model.\n\nWhile single-level models leave a lot of information on the table, multilevel models retain information about other clusters by borrowing information from the overall population when estimating group-level effects in a process called \"partial pooling\" (more on this in the following section). This process causes multilevel models to learn \"faster\" and more efficiently by leveraging information from across all groups when modelling group-level differences, and it allows multilevel models to reach stable point estimates with less data because groups with smaller sample sizes can rely more heavily on the information borrowed from the population.\n\n#### ...Resist Overfitting\n\nPartial pooling makes multilevel models both efficient and flexible, but in addition to this, shrinking group-level estimates towards the overall population mean serves as a form of regularisation[^Regularisation], striking a balance between underfitting[^Underfitting] and overfitting[^Overfitting].\n\nThis balance is a natural consequence of partial pooling, which is itself a compromise between complete and no pooling. Complete pooling models all observations together, not accounting for group effects, and fits a single global estimate. Complete pooling leads to underfitting because the model is not complex enough to effectively model the variation in the data, with the between-group variance being an essential part of the data-generating process but being ignored. On the other hand, models with no pooling treat groups as independent of each other, fitting separate models for each group. No pooling leads to overfitting, particularly with groups with limited data, because the model doesn't use information from other groups that might help stabilise estimates. Without that additional context, the model will more likely treat the group-level noise as signal.\n\nThe partial pooling process is an \"adaptive compromise that achieves regularisation\" [@mcelreath2023]. It balances the risks of underfitting and overfitting by pooling information across the groups, shrinking all group-level estimates towards the overall population mean. The amount of shrinkage depends on how large a group's sample is and how much variance there is in that group. Groups with less data or high variance will shrink towards the population mean more, meaning extreme group-level estimates are less likely unless the group has a large enough sample and small enough variance to make it justifiable.\n\nWhile the motivation for moving away from single-level models when dealing with clustered data is the artificially small standard errors they will estimate, the reason to fall in love with multilevel models as the solution to clustered data is partial pooling. Partial pooling, which serves as a type of memory, makes multilevel models more efficient, faster, and less vulnerable to overfitting, and the consequence of all of this is better point estimates. So, clustered data is everywhere, and when dealing with clustered data, a multilevel model will produce more realistic uncertainty estimates and more accurate point estimates. If you're not convinced by now, you're a heathen.\n\n[^Regularisation]:\n\n    Regularisation deliberately constrains model parameters to discourage the model from fitting to the noise in the data and make the model more generalisable.\n    \n[^Underfitting]:\n\n    Underfitting describes a situation where a model is too simple and cannot capture the data's true underlying structure.\n    \n[^Overfitting]:\n\n    Overfitting, as you may have guessed, is the opposite of underfitting. It describes a situation where a model is too complex and captures the observed data structure in \n    detail but, in the process, also captures the noise and quirks of the sample data.\n\n## The Role of Money in Football\n\nI'm sure even readers not interested in football know that money makes the goals go around. What is less clear is exactly how much money can impact outcomes on the pitch. To try to answer this question, I will estimate the relationship between a club's financial resources and league outcomes, primarily focusing on total league points but also considering goal and expected goal (xG) differences. Club resources will be captured using Transfermarkt player values, summed to total squad value, as a proxy for the financial strength of a team. \n\nTransfermarkt's values for each player are crowdsourced by the nerds that make up the Transfermarkt community, with the goal being that these values will approximate what a player would cost on the open market (not predicting a player's transfer fee) [@transfermarkt2021]. This process relies on the principle of the \"wisdom of crowds\" [@surowiecki2005], which assumes that the crowd can work together to build an estimate of market value that is as good or better than a few experts [@muller2017]. Research has shown that Transfermarkt's player values are a strong predictor of transfer fees [@herm2014; @muller2017; @coates2022] and potentially even a reasonable proxy for player salaries [@prockl2018], while reports suggest that these values are even used in the football industry to inform club decisionmaking [@smith2021; @james2022]. These values are not without their issues, as they tend to underestimate the value of players, and the amount of bias varies between leagues [@muller2017; @coates2022], but the bias across Big Five leagues should be relatively small.\n\nThe goal is to understand how a club's financial resources can impact their results on the pitch. The most important mechanism is investing in the squad (though there will be other factors - coaching and support staff, facilities, etc.). Build a better team, get better results! A reliable measure of squad value (and how it changes over time) should give some indication of how the club has invested. Treating squad values as a measure of resources assumes that every team spends, more or less, as much as their finances allow. We know that's not entirely true, but I think it is an acceptable simplifying assumption. The interest in club resources is assuming they spend that money. It's just a little catchier to talk about money rather than the spending of that money.\n\n### Exploring Football's Multilevel Data\n\nFootball has some immediately apparent grouping structures. The promotion/relegation system explicitly organises teams hierarchically! I'm only looking at outcomes in the top divisions, but I am also looking at leagues in five different countries, which will also be a source of some clustering in the data. Since I am looking at outcomes over 12 seasons, the teams themselves will also be a considerable source of clustering because, inevitably, certain teams will do more with their money than others and regularly outperform others in the league.\n\n#### League Differences\n\nNot accounting for league differences will undervalue the resource advantage that teams like Bayern Munich, PSG, and Juventus have in their leagues while ignoring the significant riches of the Premier League. \n\nThese league differences become more apparent when we plot the median squad market values in the Big Five leagues over time.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nclub_resources |> \n  group_by(league, season) |> \n  summarise(squad_value = median(squad_value)) |> \n  ggplot(aes(forcats::as_factor(season), squad_value, group = league, fill = league)) +\n  geom_col(position = \"dodge\", colour = \"#343a40\") +\n  geom_hline(yintercept = 0, colour = \"#343a40\") +\n  scale_fill_manual(values = c(\"#7AB5CC\", \"#026E99\", \"#FFA600\", \"#D93649\", \"#8C3431\")) +\n  scale_y_continuous(\n    labels = \n      scales::label_number(scale_cut = scales::cut_short_scale(), prefix = \"â‚¬\")\n    ) +\n  labs(\n    title = \"Squad Value in the Big Five Leagues Over Time\",\n      subtitle =\n      stringr::str_wrap(\n        glue::glue(\n          \"Median average Transfermarkt squad market values per season in each of the \",\n          \"Big Five leagues in Europe from 2012/13 - 2023/24.\"\n          ),\n        width = 93\n        ),\n    x = NULL, y = \"Squad Value\",\n    caption = \n      \"Visualisation: Paul Johnson | Data: Transfermarkt Via {worldfootballR}\"\n    ) +\n  theme(legend.key.width = unit(.8, units = \"cm\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/value-by-league-1.png){fig-alt='A barplot visualising the median average Transfermarkt squad values per\nseason in the Big Five leagues from 2012/13 to 2023/24. All five leagues\nare relatively equal, at a median squad value of around â‚¬100m, in the\n2012/13 season. While the median squad value increases significantly in\nevery league during this period, the Premier League\\'s growth dwarfs the\nother four leagues. By the 2023/24 season, the Premier League median squad\nvalue is around â‚¬500m, while the other four leagues are all around â‚¬200m.\n' width=672}\n:::\n:::\n\n\n\nPlenty of Premier League teams have astronomical amounts of money when compared even against the rest of the big five leagues despite not coming close to mixing with the very richest teams in England. It's important to account for league differences so that those teams are being compared against their league competition, where their gigantic pot of gold is only a moderately sized pot of gold.\n\n#### Squad Values\n\nJust being rich isn't enough. What do rich clubs do with all that money? We expect rich teams to build more valuable squads and that teams valued higher by Transfermarkt will be more successful in the league. The plot below visualises how our three outcomes (points, goal difference, and xG difference) vary by squad market value, all split by league.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nclub_resources |> \n  tidyr::pivot_longer(\n    cols = c(pts, xgd, gd),\n    names_to = \"outcome\",\n    values_to = \"value\"\n  ) |> \n  mutate(\n    outcome =\n      factor(\n        case_when(\n          outcome == \"pts\" ~ \"League Points\",\n          outcome == \"xgd\" ~ \"xG Difference\",\n          outcome == \"gd\" ~ \"Goal Difference\",\n          .default = outcome\n          ),\n        levels = c(\"League Points\", \"Goal Difference\", \"xG Difference\")\n      )\n  ) |> \n  ggplot(aes(squad_value, value)) +\n  geom_point(alpha = .4, size = .8, colour = \"#343a40\") +\n  geom_smooth(\n    method = lm, formula = y ~ log(x), colour = \"#026E99\",\n    se = FALSE, linewidth = 1.2\n  ) +\n  facet_grid(rows = vars(outcome), cols = vars(league), scales = \"free_y\") +\n  scale_x_continuous(\n    labels = \n      scales::label_number(scale_cut = scales::cut_short_scale(), prefix = \"â‚¬\")\n    ) +\n  labs(\n    title = \"League Outcomes by Squad Value in the Big Five Leagues\",\n    subtitle =\n      stringr::str_wrap(\n        glue::glue(\n          \"Comparing the association between squad values and league outcomes - \",\n          \"points, goal difference, and xG difference - in the Big Five leagues \",\n          \"in Europe across the 2012/13 - 2023/24 seasons.\"\n          ),\n        width = 93\n        ),\n    x = \"Squad Value\", y = NULL,\n    caption = \n      \"Visualisation: Paul Johnson | Data: FBref & Transfermarkt Via {worldfootballR}\"\n    ) +\n  theme(\n    panel.spacing.x = unit(.3, units = \"cm\"),\n    axis.text.x = element_text(angle = 30, vjust = 1, hjust = .75)\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/value-by-outcome-1.png){fig-alt='A regression plot visualising the association between squad market values\nand league outcomes. The data is subset by outcome (points, goal difference,\nand xG difference) and league, producing 15 plots fit. Each plot shows a\npositive association between squad values and outcomes. However, the\nassociation appears to be non-linear. The regression line fit to each subset\nof the data includes a log-transformed squad value as the predictor, which\nfits the data relatively well, though to varying degrees.\n' width=672}\n:::\n:::\n\n\n\nThe value of a team's squad positively affects all three outcomes, though that relationship is non-linear. The regression line fit to the data is done using a log-transformed squad market value, and it does a reasonably good job of capturing the apparent diminishing returns as squad market values get way out in front of the rest of the league.\n\nIt is also worth noting that while the relationship between squad value and the outcomes is similar across all five leagues, there is some variance. This variance is most apparent at the top end of the value ranges. The highest squad values are much larger in some leagues than others, as are the highest total values of each outcome (especially the league points, since these are constrained by a maximum number of points that any team could win, which varies by league).\n\n#### Season Differences\n\nFinally, we can consider how these effects have changed over time, plotting the relationship between squad values and league points, split by time, below. The darker blue points are earlier seasons in the data, and the lighter grey points are the most recent seasons[^Legend].\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nclub_resources |>\n  ggplot(aes(squad_value, pts, colour = season)) +\n  geom_point(alpha = .4, size = 1) +\n  geom_smooth(\n    method = lm, formula = y ~ log(x), se = FALSE, linewidth = 1, alpha = .6\n    ) +\n  scale_colour_manual(\n    values =\n      c(\n        \"#026E99\", \"#24779F\", \"#3881A6\", \"#498AAC\", \"#5993B2\", \"#699CB7\", \n        \"#79A6BD\", \"#8AAFC2\", \"#9BB8C7\", \"#ACC1CB\", \"#BFCACF\", \"#D2D2D2\"\n        ),\n    guide = FALSE\n    ) +\n  scale_x_continuous(\n    labels =\n      scales::label_number(scale_cut = scales::cut_short_scale(), prefix = \"â‚¬\")\n    ) +\n  labs(\n    title = \"League Points by Squad Value Over Time\",\n    subtitle =\n      glue::glue(\n        \"Comparing the association between squad market values and total league \",\n        \"points across<br>the Big Five leagues in Europe, in each season from \",\n        \"<b style='color:#00537C;'>2012/13</b> - <b style='color:#D2D2D2;'>2023/24</b>.\"\n        ),\n    x = \"Squad Value\", y = \"League Points\",\n    caption = \n      \"Visualisation: Paul Johnson | Data: FBref & Transfermarkt Via {worldfootballR}\"\n    ) +\n  theme(\n    plot.subtitle = ggtext::element_markdown(lineheight = .7)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/value-by-season-1.png){fig-alt='A regression plot visualising the association between squad market values\nand league points across the Big Five leagues in each season from 2012/13\nto 2023/24. The data is split by season, with a separate regression line\nfit to each season\\'s data, including a log-transformed squad value as the\npredictor. While the association between squad value and points is positive\nthroughout the period, the slopes appear to flatten with time, suggesting\nthat increases in squad value are worth fewer league points in recent\nseasons than earlier in the data.\n' width=672}\n:::\n:::\n\n\n\nThere is a clear shift over time. Teams have to spend more to increase their points totals now, and the ceiling of squad values has also increased with time.\n\n[^Legend]:\n\n    I know I probably should have used a legend here, but seasons are discrete values and 12 different values in a legend is silly. All you really need to see is the \n    shifting of the regression lines over time.\n\n### Estimating Squad Value Effects\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Helper Function Code (Click to Expand)\"}\nfit_mlms <- \n  function(data) {\n    lmer(\n      value ~ 1 + demean_squad + double_mean_club + time + \n        (1 + demean_squad | league/squad) + (1 | season),\n      data = data, REML = TRUE,\n      control = lmerControl(optimizer = \"bobyqa\", optCtrl = list(maxfun = 200000))\n      )\n  }\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Model Code (Click to Expand)\"}\nmodels <-\n  club_resources |>\n  mutate(\n    squad_value = log(squad_value),\n    mean_club = mean(squad_value),\n    demean_squad = squad_value - mean_club,\n    .by = squad\n  ) |> \n  tidyr::pivot_longer(\n    cols = c(pts, xgd, gd),\n    names_to = \"outcome\",\n    values_to = \"value\"\n  ) |>\n  mutate(\n    double_mean_club = mean_club - mean(squad_value),\n    value = value/mp,\n    time = as.numeric(season) - 1,\n    outcome =\n      case_when(\n        outcome == \"pts\" ~ \"Points\",\n        outcome == \"gd\" ~ \"Goal Difference\",\n        outcome == \"xgd\" ~ \"xG Difference\",\n        .default = outcome\n      )\n  ) |>\n  filter(!is.na(value)) |> \n  tidyr::nest(.by = c(outcome)) |> \n  mutate(\n    model = purrr::map(data, fit_mlms),\n    summary = purrr::map(model, broom.mixed::glance),\n    coefs = purrr::map(model, ~ broom.mixed::tidy(.x, conf.int = TRUE)),\n    preds = purrr::map(model, ~ predict(.x))\n  )\n```\n:::\n\n\n\nThe previous section highlights multiple grouping structures that need to be accounted for in the data, which is fortunate because I've already spent a lot of time talking about multilevel models here, and that would have been a real waste of time. This exploratory work also identified that squad values appear to have a non-linear relationship with the three outcomes. The other detail that we can see from the variation within and between groups across the range of squad values is that not only does the mean value vary by league, but also the magnitude of squad value's effect on the three outcomes varies. Multilevel models can handle both of these types of variation quite easily. When the mean difference is allowed to vary between groups, this is a varying intercepts model, and allowing the magnitude of the effect to vary by group is called a varying slopes model. When your model allows both, it is a varying intercepts & slopes model, and this is the kind of model we will use here. We saw minor but clear differences at the league level, and we know that the most significant differences will occur at the club level (this just would have been a mess to visualise).\n\nThe regression models fit to the three outcomes - league points, goal difference, and xG difference - all have the same basic structure. All three outcomes have been transformed to a \"Per Game\" value in order to account for the shortened season in Ligue 1 during the COVID-19 pandemic. The model includes three population-level explanatory variables: squad value, club mean value, and time. Squad market value has been decomposed into two variables - group-mean centred squad value[^Centring], using clubs as the groups, and the club mean squad value, to effectively capture the within and between effects, respectively [@bafumi2007; @bell2019; @enders2007]. Both squad value variables have been log-transformed to account for the decreasing gains in league outcomes as squad values increase. An additional variable for time, a continuous variable indexed at 0 (2012/13) and with a maximum of 11 (2023/24), is included. The time variable has been included to account for changes in the distribution of outcomes over time (for example, increasing disparities in outcomes between the best and worst teams). The grouping structures include teams nested within their league and a separate crossed-grouping variable for each season[^Grouping]. \n\nWhile the model intercepts are allowed to vary according to each grouping structure, the squad value slopes are specified to vary by the nested league/team grouping. The varying slopes component means that the magnitude of squad values' effect on outcomes is allowed to vary by league and team. We could have allowed the squad value effects to vary by season as well, given that there did appear to be some flattening of the curve of squad values association with league points over time, however, the differences were minor and allowing the intercepts to vary should be sufficient, without inviting unnecessary complexity. In contrast to the population-level time variable (which is intended to capture trends), the season grouping structure mostly captures the fact that outcomes are not independent of each other in a given season. There are a finite number of points in a season, so if Man City win them all, there's none left for anyone else. Similarly, if Man City score 1000 goals, everyone else's goal difference will be much worse.\n\nThe regression results are below in @tbl-model-summary. \n\n\n\n::: {#tbl-model-summary .cell tbl-cap='Multilevel Regressions of Squad Values\\' Effect on Season Outcomes\n'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Table Code (Click to Expand)\"}\ncm <-\n  c(\n    \"(Intercept)\" = \"(Intercept)\",\n    \"demean_squad\" = \"Squad Value\",\n    \"double_mean_club\" = \"Club Mean Value\",\n    \"time\" = \"Time (Seasons)\",\n    \"SD (Intercept squadleague)\" = \"_Club_: Intercept Std. Dev.\",\n    \"SD (demean_squad squadleague)\" = \"_Club_: Slope Std. Dev.\",\n    \"Cor (Intercept~demean_squad squadleague)\" = \n      \"_Club_: Intercept x Slope Correlation\",\n    \"SD (Intercept league)\" = \"_League_: Intercept Std. Dev.\",\n    \"SD (demean_squad league)\" = \"_League_: Slope Std. Dev.\",\n    \"Cor (Intercept~demean_squad league)\" = \n      \"_League_: Intercept x Slope Correlation\",\n    \"SD (Intercept season)\" = \"_Season_: Intercept Std. Dev.\",\n    \"SD (Observations)\" = \"Residual Std. Dev.\"\n  )\n\nmodels |> \n  pull(model, name = outcome) |>\n  modelsummary::msummary(\n    statistic = 'conf.int', gof_omit = \"AIC|BIC\", coef_map = cm, \n    fmt = 2, output = \"gt\"\n    ) |> \n  tab_row_group(\n    label = md(\"**Group Effects**\"),\n    rows = 9:16\n  ) |>\n  tab_row_group(\n    label = md(\"**Population-Level Effects**\"),\n    rows = 1:8\n  ) |> \n  tab_footnote(\n    footnote =\n      \"Integers 0-11 (2012/13 = 0; 2022/23 = 11)\",\n    locations =\n      cells_body(\n        columns = 1,\n        rows = 7\n      )\n  ) |> \n  tab_footnote(\n    footnote = \"Log-transformed\",\n    locations =\n      cells_body(\n        columns = 1,\n        rows = c(3, 5)\n      )\n    ) |>\n  tab_footnote(\n    footnote = \"Group mean centred\",\n    locations =\n      cells_body(\n        columns = 1,\n        rows = 3\n      )\n    ) |> \n  tab_footnote(\n    footnote = \"Grand mean centred\",\n    locations =\n      cells_body(\n        columns = 1,\n        rows = 5\n      )\n    ) |> \n  tab_spanner(columns = 2:4, label = \"Outcomes (Per Game)\") |> \n  fmt_markdown(columns = 1, rows = 9:16) |> \n  tab_style(\n    style = cell_text(size = \"small\"),\n    locations = cells_body(\n      columns = 2:4,\n      rows = c(2, 4, 6, 8)\n    )\n  ) |>\n  tbl_theme()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"azkwmvdpnp\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#azkwmvdpnp table {\n  font-family: Poppins;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#azkwmvdpnp thead, #azkwmvdpnp tbody, #azkwmvdpnp tfoot, #azkwmvdpnp tr, #azkwmvdpnp td, #azkwmvdpnp th {\n  border-style: none;\n}\n\n#azkwmvdpnp p {\n  margin: 0;\n  padding: 0;\n}\n\n#azkwmvdpnp .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#azkwmvdpnp .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#azkwmvdpnp .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#azkwmvdpnp .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#azkwmvdpnp .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#azkwmvdpnp .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#azkwmvdpnp .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#azkwmvdpnp .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#azkwmvdpnp .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#azkwmvdpnp .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#azkwmvdpnp .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#azkwmvdpnp .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#azkwmvdpnp .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#azkwmvdpnp .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#azkwmvdpnp .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#azkwmvdpnp .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#azkwmvdpnp .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#azkwmvdpnp .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#azkwmvdpnp .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#azkwmvdpnp .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#azkwmvdpnp .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#azkwmvdpnp .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#azkwmvdpnp .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#azkwmvdpnp .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#azkwmvdpnp .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#azkwmvdpnp .gt_left {\n  text-align: left;\n}\n\n#azkwmvdpnp .gt_center {\n  text-align: center;\n}\n\n#azkwmvdpnp .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#azkwmvdpnp .gt_font_normal {\n  font-weight: normal;\n}\n\n#azkwmvdpnp .gt_font_bold {\n  font-weight: bold;\n}\n\n#azkwmvdpnp .gt_font_italic {\n  font-style: italic;\n}\n\n#azkwmvdpnp .gt_super {\n  font-size: 65%;\n}\n\n#azkwmvdpnp .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#azkwmvdpnp .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#azkwmvdpnp .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#azkwmvdpnp .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#azkwmvdpnp .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#azkwmvdpnp .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#azkwmvdpnp .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#azkwmvdpnp .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#azkwmvdpnp div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\" \"> </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"Outcomes (Per Game)\">\n        <span class=\"gt_column_spanner\">Outcomes (Per Game)</span>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Points\">Points</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Goal Difference\">Goal Difference</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"xG Difference\">xG Difference</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"&lt;div data-qmd-base64=&quot;KipQb3B1bGF0aW9uLUxldmVsIEVmZmVjdHMqKg==&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;Population-Level Effects&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipQb3B1bGF0aW9uLUxldmVsIEVmZmVjdHMqKg==\"><div class='gt_from_md'><p><strong>Population-Level Effects</strong></p>\n</div></div></th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\">(Intercept)</td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\">1.60</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\">0.37</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\">0.06</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\"></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\" style=\"font-size: small;\">[1.42, 1.79]</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\" style=\"font-size: small;\">[0.08, 0.67]</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\" style=\"font-size: small;\">[-0.19, 0.31]</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\">Squad Value<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:normal;font-weight:bold;line-height: 0;\"><sup>*,â€ </sup></span></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\">0.39</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\">0.64</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\">0.42</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\"></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\" style=\"font-size: small;\">[0.32, 0.47]</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\" style=\"font-size: small;\">[0.52, 0.77]</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\" style=\"font-size: small;\">[0.25, 0.59]</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\">Club Mean Value<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:normal;font-weight:bold;line-height: 0;\"><sup>*,â€¡</sup></span></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\">0.52</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\">0.81</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\">0.58</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\"></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\" style=\"font-size: small;\">[0.49, 0.55]</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\" style=\"font-size: small;\">[0.77, 0.85]</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\" style=\"font-size: small;\">[0.54, 0.63]</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\">Time (Seasons)<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:normal;font-weight:bold;line-height: 0;\"><sup>Â§</sup></span></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\">-0.04</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\">-0.07</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\">-0.02</td></tr>\n    <tr><td headers=\"**Population-Level Effects**   \" class=\"gt_row gt_left\"></td>\n<td headers=\"**Population-Level Effects**  Points\" class=\"gt_row gt_center\" style=\"font-size: small;\">[-0.05, -0.03]</td>\n<td headers=\"**Population-Level Effects**  Goal Difference\" class=\"gt_row gt_center\" style=\"font-size: small;\">[-0.08, -0.05]</td>\n<td headers=\"**Population-Level Effects**  xG Difference\" class=\"gt_row gt_center\" style=\"font-size: small;\">[-0.04, -0.01]</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"&lt;div data-qmd-base64=&quot;KipHcm91cCBFZmZlY3RzKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;Group Effects&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipHcm91cCBFZmZlY3RzKio=\"><div class='gt_from_md'><p><strong>Group Effects</strong></p>\n</div></div></th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X0NsdWJfOiBJbnRlcmNlcHQgU3RkLiBEZXYu\"><div class='gt_from_md'><p><em>Club</em>: Intercept Std. Dev.</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.09</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.15</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">0.16</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X0NsdWJfOiBTbG9wZSBTdGQuIERldi4=\"><div class='gt_from_md'><p><em>Club</em>: Slope Std. Dev.</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.15</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.25</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">0.34</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X0NsdWJfOiBJbnRlcmNlcHQgeCBTbG9wZSBDb3JyZWxhdGlvbg==\"><div class='gt_from_md'><p><em>Club</em>: Intercept x Slope Correlation</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.22</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.10</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">-0.20</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X0xlYWd1ZV86IEludGVyY2VwdCBTdGQuIERldi4=\"><div class='gt_from_md'><p><em>League</em>: Intercept Std. Dev.</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.20</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.32</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">0.25</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X0xlYWd1ZV86IFNsb3BlIFN0ZC4gRGV2Lg==\"><div class='gt_from_md'><p><em>League</em>: Slope Std. Dev.</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.05</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.10</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">0.15</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X0xlYWd1ZV86IEludGVyY2VwdCB4IFNsb3BlIENvcnJlbGF0aW9u\"><div class='gt_from_md'><p><em>League</em>: Intercept x Slope Correlation</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.28</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.25</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">-0.35</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\"><div data-qmd-base64=\"X1NlYXNvbl86IEludGVyY2VwdCBTdGQuIERldi4=\"><div class='gt_from_md'><p><em>Season</em>: Intercept Std. Dev.</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\">0.04</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\">0.07</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\">0.03</td></tr>\n    <tr><td headers=\"**Group Effects**   \" class=\"gt_row gt_left\" style=\"border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;\"><div data-qmd-base64=\"UmVzaWR1YWwgU3RkLiBEZXYu\"><div class='gt_from_md'><p>Residual Std. Dev.</p>\n</div></div></td>\n<td headers=\"**Group Effects**  Points\" class=\"gt_row gt_center\" style=\"border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;\">0.22</td>\n<td headers=\"**Group Effects**  Goal Difference\" class=\"gt_row gt_center\" style=\"border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;\">0.33</td>\n<td headers=\"**Group Effects**  xG Difference\" class=\"gt_row gt_center\" style=\"border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;\">0.24</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_empty_group_heading\" scope=\"colgroup\" id=\"\"></th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"NA   \" class=\"gt_row gt_left\">Num.Obs.</td>\n<td headers=\"NA  Points\" class=\"gt_row gt_center\">1174</td>\n<td headers=\"NA  Goal Difference\" class=\"gt_row gt_center\">1174</td>\n<td headers=\"NA  xG Difference\" class=\"gt_row gt_center\">684</td></tr>\n    <tr><td headers=\"NA   \" class=\"gt_row gt_left\">R2 Marg.</td>\n<td headers=\"NA  Points\" class=\"gt_row gt_center\">0.629</td>\n<td headers=\"NA  Goal Difference\" class=\"gt_row gt_center\">0.633</td>\n<td headers=\"NA  xG Difference\" class=\"gt_row gt_center\">0.596</td></tr>\n    <tr><td headers=\"NA   \" class=\"gt_row gt_left\">R2 Cond.</td>\n<td headers=\"NA  Points\" class=\"gt_row gt_center\">0.822</td>\n<td headers=\"NA  Goal Difference\" class=\"gt_row gt_center\">0.842</td>\n<td headers=\"NA  xG Difference\" class=\"gt_row gt_center\">0.848</td></tr>\n    <tr><td headers=\"NA   \" class=\"gt_row gt_left\">ICC</td>\n<td headers=\"NA  Points\" class=\"gt_row gt_center\">0.5</td>\n<td headers=\"NA  Goal Difference\" class=\"gt_row gt_center\">0.6</td>\n<td headers=\"NA  xG Difference\" class=\"gt_row gt_center\">0.6</td></tr>\n    <tr><td headers=\"NA   \" class=\"gt_row gt_left\">RMSE</td>\n<td headers=\"NA  Points\" class=\"gt_row gt_center\">0.21</td>\n<td headers=\"NA  Goal Difference\" class=\"gt_row gt_center\">0.30</td>\n<td headers=\"NA  xG Difference\" class=\"gt_row gt_center\">0.21</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" style=\"text-align: left;\" colspan=\"4\">Source: FBref &amp; Transfermarkt Via {worldfootballR}</td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" style=\"text-align: left;\" colspan=\"4\"><span style=\"white-space:nowrap;font-style:normal;font-weight:normal;line-height: 0;\">(*)</span> Log-transformed</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" style=\"text-align: left;\" colspan=\"4\"><span style=\"white-space:nowrap;font-style:normal;font-weight:normal;line-height: 0;\">(â€ )</span> Group mean centred</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" style=\"text-align: left;\" colspan=\"4\"><span style=\"white-space:nowrap;font-style:normal;font-weight:normal;line-height: 0;\">(â€¡)</span> Grand mean centred</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" style=\"text-align: left;\" colspan=\"4\"><span style=\"white-space:nowrap;font-style:normal;font-weight:normal;line-height: 0;\">(Â§)</span> Integers 0-11 (2012/13 = 0; 2022/23 = 11)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\nLog-transformed coefficients are not directly interpretable beyond the direction of the effect. However, by transforming the coefficient $\\beta_1$ with the formula $38 \\times \\beta_1 \\times \\text{log}(1.10)$, we can estimate the average increase in the outcome over a 38-game season for every additional 10% increase in squad value (~â‚¬24m)[^Scale]. Every 10% increase in squad value results in an approximate increase of 1.4 points in a 38-game season, 1.5 in xG difference, and 2.3 in goal difference, while a 10% increase in a club's average squad value over the 12-season period leads to an estimated increase of 1.9 points in a 38-game season, 2.1 in xG difference, and 2.9 in goal difference.\n\nWe can also calculate the percentage increase in a team's value that the model estimates will lead to three additional points in a 38-game season, using the formula $\\left(e^{\\frac{3}{38 \\times \\beta_1}} - 1\\right) \\times 100$. The model estimates that a ~22.4% increase in squad value leads to a three-point increase in a season, while a ~16.4% increase in a club's average squad value should be sufficient to achieve the same result a given season.\n\nThese differences are relatively small, but they feel significant in a sport where small point differences can decide seasons, and clubs are willing to spend millions on just one player.\n\nThe parameter estimates for the group-level variables (except for the intercept-slope correlations) indicate how much the intercepts and slopes deviate from their grand means. For example, the 0.15 club slope standard deviation (0.02 variance) suggests that the smartest teams can, on average, gain approximately 0.07 more points per 10% increase in squad value in a 38-game season. Additionally, the correlations between intercepts and slopes reveal how larger intercepts are associated with larger or smaller slopes (and vice versa) [@heiss2021]. For example, the moderate 0.28 correlation between league-specific intercepts and slopes in the points model indicates that leagues with higher average squad values yield more points per game, which in turn leads to greater increases in points per game with rising squad values. I think this makes sense. When squad values are worth more points per game in a given league, you would expect that increasing squad values would be worth more, too[^Correlations].\n\n[^Centring]:\n\n    Group-mean centring takes the average value of the variable for each group at the relevant level (in this case, clubs) and subtracts this value from the population \n    values to \"centre\" them around the group mean. In this instance, the heterogeneity bias is sufficiently negated by group-mean centring at the club level because this \n    is the primary source of the variance in squad values at the group level.\n\n[^Grouping]:\n\n    Nested and crossed grouping structures are another example of the flexibility and complexity that can be specified in a multilevel model. They describe how grouping \n    structures relate to each other when the data has three or more hierarchical levels. Grouping structures are nested when a lower-level grouping is entirely contained \n    within another higher-level grouping, meaning that each of the lower-level groups belongs to only one of the higher-level groups. For example, the clubs in our data \n    are entirely nested within their league. Manchester United have never broken out of their containment and run loose in the Bundesliga (and while teams can be relegated, \n    the lower tiers are not included in this data). Grouping structures are crossed, on the other hand, when the lower-level grouping is only partially contained within \n    the higher-level grouping. The lower-level groups can belong to any higher-level groups (and multiple groups) when crossed. Seasons are crossed with leagues and teams \n    because both can belong to every one of the seasons (and in the case of the leagues, they **do** belong to each season). \n\n[^Scale]:\n\n    I have chosen to use 10% increases in squad values because this seems more meaningful than 1% increases (~â‚¬2.4m). \n\n[^Correlations]:\n\n    Interestingly, the intercept-slope correlations for xG difference are negative for both the league and club levels. The -0.35 correlation between league intercepts and \n    slopes suggests that in leagues where the average squad value is worth less than the grand mean xG difference, more can be gained by increasing the squad value. I don't \n    know what to make of this. It's interesting. Is it more than that? I've been looking at this regression table for too long now.\n\n### Predicting League Points\n\nI still don't know what to make of the effect that club resources have. The model parameters lack context. Computing predictions using the fitted multilevel model will tell us more. I will focus on league points because I think that's a little more interesting than looking at goal or xG difference[^Nerds].\n\n![](arrested-development.jpg){fig-align=\"center\" width=60% fig-alt=\"The 'It's One Banana Michael' meme from Arrested Development, with Lucille Bluth saying 'I mean, it's one point, Michael? What could it cost? 100 million dollars?'\"}\n\nWe can start by looking at the predicted league points across all of the leagues by squad values over the last three seasons.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Helper Function Code (Click to Expand)\"}\noverall_preds <- \n  function(data) {\n    predictions(\n      data, re.form = NA,\n      variables = \n        list(\"time\" =  9:11, season = c(\"2021/22\", \"2022/23\", \"2023/24\"))\n      )\n  }\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nmodels |>\n  filter(outcome == \"Points\") |>\n  select(model) |>\n  rowwise() |>\n  mutate(preds = list(overall_preds(model))) |>\n  tidyr::unnest(preds) |>\n  mutate(\n    across(c(double_mean_club, demean_squad), ~ as.numeric(as.character(.x))),\n    double_mean_club = double_mean_club + mean(log(club_resources$squad_value)),\n    squad_value = exp(demean_squad + double_mean_club),\n    across(c(estimate, conf.low, conf.high), ~ .x * 38)\n    ) |>\n  ggplot(aes(squad_value, estimate)) +\n  geom_smooth(\n    method = lm, formula = y ~ log(x), \n    se = FALSE, linewidth = 1, colour = \"#343a40\"\n    ) + \n  geom_smooth(\n    aes(y = conf.low), method = lm, formula = y ~ log(x), se = FALSE, \n    linewidth = 0.8, colour = \"#343a40\", linetype = \"dashed\"\n    ) + \n  geom_smooth(\n    aes(y = conf.high), method = lm, formula = y ~ log(x), se = FALSE, \n    linewidth = 0.8, colour = \"#343a40\", linetype = \"dashed\"\n    ) + \n  scale_x_continuous(\n    labels = \n      scales::label_number(scale_cut = scales::cut_short_scale(), prefix = \"â‚¬\")\n    ) +\n  labs(\n    title = \"Predicted Points by Squad Value Across the Big Five Leagues\",\n      subtitle =\n      stringr::str_wrap(\n        glue::glue(\n          \"Conditional adjusted predicted league points by squad market values, \",\n          \"across the Big Five leagues in Europe, from 2021/22 - 2023/24. Predicted \",\n          \"points calculated by multiplying points per game by 38 to reflect the \",\n          \"total points for a 38-game season.\"\n          ),\n        width = 95\n        ),\n    x = \"Squad Value\", y = \"Predicted Points\",\n    caption =\n      \"Visualisation: Paul Johnson | Data: FBref & Transfermarkt Via {worldfootballR}\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/overall-preds-1.png){fig-alt='A regression plot visualising the relationship between squad market values\nand the model\\'s predicted points across the Big Five leagues in the last\nthree seasons (2021/22 - 2023/24). The plot includes a fitted regression\nline and 95% confidence intervals, showing that increases in the lowest\nsquad values lead to exponential gains in predicted points, with squad\nvalues up to around â‚¬200m leading to predicted points increasing from close\nto zero up to around 50 points. While further increases in squad value lead\nto higher predicted points totals, it takes squad values of over â‚¬750m to\nreach 75 points.\n' width=672}\n:::\n:::\n\n\n\nThe marginal gains for increases in squad value are the largest at the lower end of the values, appearing to start flattening out somewhere around the â‚¬200m point. There is a ton of value to be had in increasing squad value at the lower end of the leagues, but once a team pushes for 50+ points, further spending becomes less efficient.\n\nWe can also compare how increases in squad value increase predicted points conditional on the leagues. We will use marginal predictions, which calculate the effect of increases in squad values averaged within each league, plotted below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Helper Function Code (Click to Expand)\"}\nleague_preds <- \n  function(data) {\n    predictions(\n      data,\n      by = c(\"demean_squad\", \"double_mean_club\", \"league\"),\n      )\n    }\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nmodels |>\n  filter(outcome == \"Points\") |> \n  select(data, model) |> \n  rowwise() |> \n  mutate(preds = list(league_preds(model))) |> \n  tidyr::unnest(preds) |> \n  mutate(\n    across(c(double_mean_club, demean_squad), ~ as.numeric(as.character(.x))),\n    double_mean_club = double_mean_club + mean(log(club_resources$squad_value)),\n    squad_value = exp(demean_squad + double_mean_club),\n    estimate = case_when(\n        league %in% c(\"Bundesliga\", \"Ligue 1\") ~ estimate * 34,\n        league %in% c(\"Premier League\", \"La Liga\", \"Serie A\") ~ estimate * 38\n        )\n  ) |> \n  ggplot(aes(squad_value, estimate, colour = league)) +\n  geom_smooth(\n    method = lm, formula = y ~ log(x), se = FALSE, alpha = .8, linewidth = 1\n    ) +\n  scale_colour_manual(\n    values = c(\"#7AB5CC\", \"#026E99\", \"#FFA600\", \"#D93649\", \"#8C3431\")\n    ) +\n  scale_x_continuous(\n    labels = \n      scales::label_number(scale_cut = scales::cut_short_scale(), prefix = \"â‚¬\")\n    ) +\n  labs(\n    title = \"Predicted Points by Squad Value in the Big Five Leagues\",\n    subtitle =\n      stringr::str_wrap(\n        glue::glue(\n          \"Marginal adjusted predicted league points, averaged over squad \",\n          \"market values in each of the Big Five leagues in Europe from 2012/13 \",\n          \"- 2023/24. Predicted points calculated by multiplying points per game \",\n          \"by the total games in each league's season.\"\n          ),\n        width = 95\n        ),\n    x = \"Squad Value\", y = \"Predicted Points\",\n    caption =\n      \"Visualisation: Paul Johnson | Data: FBref & Transfermarkt Via {worldfootballR}\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/league-preds-1.png){fig-alt='A regression plot visualising the relationship between squad market values\nand the model\\'s predicted points in the Big Five leagues from 2012/13 -\n2023/24. The plot includes fitted regression lines for each league. The five\nregression lines are similar in shape. However, the Premier League slope is\nmore gradual with a smaller intercept, suggesting that Premier League teams\nneed more expensive squads to compete and increases in squad value are worth\nfewer points. The Premier League line also extends further on the x-axis\nbecause the most expensive squads in the Premier League are worth\nsignificantly more than the rest of the leagues. The intercepts for the\nother four leagues are very similar, but the Bundesliga and Ligue 1 tail off\nas squad value increases due to playing fewer games in a season and,\ntherefore, having fewer available points that the increases in squad value\ncould gain. Finally, La Liga and Serie A have similar slopes. The endpoint\nof the La Liga line is further along the x-axis due to the significantly\nlarger Real Madrid and Barcelona squad values.\n' width=672}\n:::\n:::\n\n\n\nThe predicted points lines for each league are relatively similar (accounting for the four fewer games per season in the Bundesliga & Ligue 1). These lines represent the group mean variance around the grand mean intercept and slope (which is effectively what the previous plot shows).\n\nHowever, there are some interesting details around the margins. The Premier League intercept is a little lower than the other four leagues, which is to be expected because the average value is much higher and, therefore, the base level required to win any points at all is higher. While the Premier League's predicted points line catches up with the Bundesliga and Ligue 1, this is only due to the fewer available total points in those two leagues per season. The Premier League slope is not as steep, and once all the predicted points lines flatten out, the Premier League remains more or less parallel to the other 38-game-season leagues.\n\n[^Nerds]:\n\n    Watch the games, spreadsheet nerds!\n\n#### Identifying Performance Above/Below Expectations\n\nAll this is very interesting, but the real question is, \"How can I use this against my enemies?\" Well, we can compute the predicted points for each team and compare these predictions against their actual points totals each season. If your enemies are big dumb idiots, they should be underperforming their predicted points consistently. If all your enemies are King Curtis, maybe you're the problem...\n\nPerformances above/below the model's expectations for the Premier League's \"top six\" from 2012/13 to 2023/24 are plotted below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nmodels |>\n  filter(outcome == \"Points\") |> \n  tidyr::unnest(c(data, preds)) |> \n  mutate(\n    value = value * mp,\n    preds = round(preds * mp)\n    ) |> \n  tidyr::pivot_longer(\n    cols = c(value, preds), names_to = \"type\", values_to = \"points\"\n    ) |> \n  mutate(\n    type = \n      case_when(\n        type == \"value\" ~ \"Total Points\",\n        type == \"preds\" ~ \"Predicted Points\",\n        .default = type\n      )\n    ) |> \n  filter(\n    squad %in% c(\n      \"Manchester City\", \"Manchester Utd\", \"Liverpool\", \n      \"Arsenal\", \"Chelsea\", \"Tottenham\"\n      )\n    ) |>\n  ggplot(aes(season, points, group = type, linetype = type)) +\n  geom_smooth(\n    method = lm, formula = y ~ splines::ns(x, 3), \n    linewidth = 0.5, se = FALSE, colour = \"#343a40\"\n    ) +\n  geom_point(aes(fill = type), shape = 21, size = 1.2, stroke = 1) +\n  guides(fill = guide_legend(override.aes = list(size = 2))) + \n  scale_fill_manual(values = c(\"white\", \"#343a40\")) +\n  scale_linetype_manual(values = c(\"dashed\", \"solid\")) +\n  scale_x_discrete(\n    expand = c(0.05, 0.05), \n    breaks = c(\"2013/14\", \"2015/16\", \"2017/18\", \"2019/20\", \"2021/22\", \"2023/24\")\n    ) +\n  facet_wrap(facets = vars(squad), nrow = 3) +\n  labs(\n    title = \"Premier League Top Six's Performances Above/Below Expectations\",\n    subtitle = \n      stringr::str_wrap(\n        glue::glue(\n          \"Comparing Arsenal, Chelsea, Liverpool, Man City, Man Utd, & Spurs's \",\n          \"total and predicted points in the Premier League from 2012/13 to \",\n          \"2023/24, conditional on squad market values per season.\"\n          ),\n        width = 95\n      ),\n    x = NULL, y = NULL,\n    caption = \n      \"Visualisation: Paul Johnson | Data: FBref & Transfermarkt Via {worldfootballR}\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/top-six-1.png){fig-alt='A time-series plot visualising Arsenal, Chelsea, Liverpool, Man City, Man\nUnited, and Spurs\\'s total and predicted points each season from 2012/13 to\n2023/24, including a fitted line that visualises the trends in predicted\nand total points. Arsenal significantly underperformed expectations midway\nthrough the period but in recent seasons have experienced similarly\nsignificant overperformances, while Liverpool and Arsenal have consistently\noverperformed expectations recently. Manchester United and Tottenham have\nperformed above expectations in earlier seasons but have otherwise met\nexpectations. Finally, Chelsea have the largest swings, with massive\noverperformances in the early seasons and similarly significant\nunderperformances in other seasons.\n' width=672}\n:::\n:::\n\n\n\nThese results seem to align with what I would have expected, for the most part (though Chelsea's early years are pretty chaotic). The exception is Manchester United, who have, miraculously, performed close to expectations over the period. Any model that doesn't paint United as a gang of dumb idiots in the post-Fergie years is getting at least one thing wrong.\n\nI think this highlights a flaw in the methodology used here, particularly around the operationalisation of \"squad market values\" as a proxy for the club's financial clout. A critical assumption underpinning the use of squad values in this model is that teams are approximately smart enough to spend their money on the best players they can afford. The intelligent teams will get the better deals, and the dummies will overspend, but the spending will at least appear reasonable enough to reflect in the value of the squad. Over and underperformance can then be assumed to represent the teams that have been smart versus those that have misspent (though, in reality, it will be a function of other factors, too). In Manchester United's case, they are not performing significantly above or below expectations based on their squad value, but this is likely due to the fact their squad building has been so poor that the Transfermarkt squad values don't capture the amount they've spent on new players because the valuations are so misaligned with the fees United paid.\n\n##### The Biggest Over & Underperformers\n\nFinally, let's sort the penny-wise from the (billion) pound foolish. @tbl-overperformers and @tbl-underperformers include the top three teams in each league regarding overperformance and underperformance, calculating each team's total predicted points as a percentage above or below their total points, respectively. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Function Code (Click to Expand)\"}\nperformance_table <-\n  function(min_max) {\n    models |>\n      filter(outcome == \"Points\") |>\n      tidyr::unnest(c(data, preds)) |>\n      filter(n() > 3, .by = squad) |>\n      mutate(\n        value = value * mp,\n        preds = round(preds * mp)\n        ) |>\n      summarise(\n        mp = sum(mp),\n        avg_ppg = sum(value)/mp,\n        pred_ppg = sum(preds)/mp,\n        pct_diff = (avg_ppg / pred_ppg) - 1,\n        .by = c(squad, league)\n        ) |>\n      min_max(order_by = pct_diff, n = 3, by = league) |>\n      select(squad, league, avg_ppg, pred_ppg, pct_diff) |> \n      gt(groupname_col = \"league\", rowname_col = \"squad\") |>\n      cols_label(\n        avg_ppg = \"Average\",\n        pred_ppg = \"Predicted\",\n        pct_diff ~ \"Over/Under\"\n        ) |>\n      tab_spanner(\n        label = \"Points Per Game\",\n        columns = c(avg_ppg, pred_ppg)\n        ) |> \n      fmt_number(columns = c(avg_ppg, pred_ppg, pct_diff), decimals = 2) |> \n      fmt_percent(columns = pct_diff)  |>  \n      cols_align(align = \"center\", columns = c(avg_ppg, pred_ppg, pct_diff)) |>\n      tab_style(\n        style = cell_text(weight = \"bold\"),\n        locations = cells_row_groups()\n      ) |>\n      tbl_theme()\n  }\n```\n:::\n\n\n\n::: {.panel-tabset}\n\n###### Overperformers\n\n\n\n::: {#tbl-overperformers .cell tbl-cap='The Biggest Overperformers in the Big Five Leagues'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Table Code (Click to Expand)\"}\nperformance_table(slice_max)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"uitfehbuty\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#uitfehbuty table {\n  font-family: Poppins;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#uitfehbuty thead, #uitfehbuty tbody, #uitfehbuty tfoot, #uitfehbuty tr, #uitfehbuty td, #uitfehbuty th {\n  border-style: none;\n}\n\n#uitfehbuty p {\n  margin: 0;\n  padding: 0;\n}\n\n#uitfehbuty .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#uitfehbuty .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#uitfehbuty .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#uitfehbuty .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#uitfehbuty .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#uitfehbuty .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#uitfehbuty .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#uitfehbuty .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#uitfehbuty .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#uitfehbuty .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#uitfehbuty .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#uitfehbuty .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#uitfehbuty .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#uitfehbuty .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#uitfehbuty .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#uitfehbuty .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#uitfehbuty .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#uitfehbuty .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#uitfehbuty .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#uitfehbuty .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#uitfehbuty .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#uitfehbuty .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#uitfehbuty .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#uitfehbuty .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#uitfehbuty .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#uitfehbuty .gt_left {\n  text-align: left;\n}\n\n#uitfehbuty .gt_center {\n  text-align: center;\n}\n\n#uitfehbuty .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#uitfehbuty .gt_font_normal {\n  font-weight: normal;\n}\n\n#uitfehbuty .gt_font_bold {\n  font-weight: bold;\n}\n\n#uitfehbuty .gt_font_italic {\n  font-style: italic;\n}\n\n#uitfehbuty .gt_super {\n  font-size: 65%;\n}\n\n#uitfehbuty .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#uitfehbuty .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#uitfehbuty .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#uitfehbuty .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#uitfehbuty .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#uitfehbuty .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#uitfehbuty .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#uitfehbuty .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#uitfehbuty div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Points Per Game\">\n        <span class=\"gt_column_spanner\">Points Per Game</span>\n      </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"Over/Under\">Over/Under</th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Average\">Average</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Predicted\">Predicted</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Premier League\">Premier League</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Manchester City</th>\n<td headers=\"Premier League stub_1_1 avg_ppg\" class=\"gt_row gt_center\">2.25</td>\n<td headers=\"Premier League stub_1_1 pred_ppg\" class=\"gt_row gt_center\">2.14</td>\n<td headers=\"Premier League stub_1_1 pct_diff\" class=\"gt_row gt_center\">5.02%</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Burnley</th>\n<td headers=\"Premier League stub_1_2 avg_ppg\" class=\"gt_row gt_center\">1.05</td>\n<td headers=\"Premier League stub_1_2 pred_ppg\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"Premier League stub_1_2 pct_diff\" class=\"gt_row gt_center\">4.59%</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Stoke City</th>\n<td headers=\"Premier League stub_1_3 avg_ppg\" class=\"gt_row gt_center\">1.20</td>\n<td headers=\"Premier League stub_1_3 pred_ppg\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"Premier League stub_1_3 pct_diff\" class=\"gt_row gt_center\">4.18%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"La Liga\">La Liga</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">CÃ¡diz</th>\n<td headers=\"La Liga stub_1_4 avg_ppg\" class=\"gt_row gt_center\">1.04</td>\n<td headers=\"La Liga stub_1_4 pred_ppg\" class=\"gt_row gt_center\">0.88</td>\n<td headers=\"La Liga stub_1_4 pct_diff\" class=\"gt_row gt_center\">18.80%</td></tr>\n    <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Girona</th>\n<td headers=\"La Liga stub_1_5 avg_ppg\" class=\"gt_row gt_center\">1.43</td>\n<td headers=\"La Liga stub_1_5 pred_ppg\" class=\"gt_row gt_center\">1.32</td>\n<td headers=\"La Liga stub_1_5 pct_diff\" class=\"gt_row gt_center\">8.46%</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Eibar</th>\n<td headers=\"La Liga stub_1_6 avg_ppg\" class=\"gt_row gt_center\">1.14</td>\n<td headers=\"La Liga stub_1_6 pred_ppg\" class=\"gt_row gt_center\">1.05</td>\n<td headers=\"La Liga stub_1_6 pct_diff\" class=\"gt_row gt_center\">7.86%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Ligue 1\">Ligue 1</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Bastia</th>\n<td headers=\"Ligue 1 stub_1_7 avg_ppg\" class=\"gt_row gt_center\">1.19</td>\n<td headers=\"Ligue 1 stub_1_7 pred_ppg\" class=\"gt_row gt_center\">1.06</td>\n<td headers=\"Ligue 1 stub_1_7 pct_diff\" class=\"gt_row gt_center\">12.94%</td></tr>\n    <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Guingamp</th>\n<td headers=\"Ligue 1 stub_1_8 avg_ppg\" class=\"gt_row gt_center\">1.14</td>\n<td headers=\"Ligue 1 stub_1_8 pred_ppg\" class=\"gt_row gt_center\">1.04</td>\n<td headers=\"Ligue 1 stub_1_8 pct_diff\" class=\"gt_row gt_center\">9.28%</td></tr>\n    <tr><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Lens</th>\n<td headers=\"Ligue 1 stub_1_9 avg_ppg\" class=\"gt_row gt_center\">1.52</td>\n<td headers=\"Ligue 1 stub_1_9 pred_ppg\" class=\"gt_row gt_center\">1.43</td>\n<td headers=\"Ligue 1 stub_1_9 pct_diff\" class=\"gt_row gt_center\">6.39%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Bundesliga\">Bundesliga</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Union Berlin</th>\n<td headers=\"Bundesliga stub_1_10 avg_ppg\" class=\"gt_row gt_center\">1.43</td>\n<td headers=\"Bundesliga stub_1_10 pred_ppg\" class=\"gt_row gt_center\">1.21</td>\n<td headers=\"Bundesliga stub_1_10 pct_diff\" class=\"gt_row gt_center\">17.96%</td></tr>\n    <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Bayern Munich</th>\n<td headers=\"Bundesliga stub_1_11 avg_ppg\" class=\"gt_row gt_center\">2.38</td>\n<td headers=\"Bundesliga stub_1_11 pred_ppg\" class=\"gt_row gt_center\">2.32</td>\n<td headers=\"Bundesliga stub_1_11 pct_diff\" class=\"gt_row gt_center\">2.64%</td></tr>\n    <tr><th id=\"stub_1_12\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Augsburg</th>\n<td headers=\"Bundesliga stub_1_12 avg_ppg\" class=\"gt_row gt_center\">1.14</td>\n<td headers=\"Bundesliga stub_1_12 pred_ppg\" class=\"gt_row gt_center\">1.12</td>\n<td headers=\"Bundesliga stub_1_12 pct_diff\" class=\"gt_row gt_center\">1.97%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Serie A\">Serie A</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_13\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Chievo</th>\n<td headers=\"Serie A stub_1_13 avg_ppg\" class=\"gt_row gt_center\">1.03</td>\n<td headers=\"Serie A stub_1_13 pred_ppg\" class=\"gt_row gt_center\">0.96</td>\n<td headers=\"Serie A stub_1_13 pct_diff\" class=\"gt_row gt_center\">7.03%</td></tr>\n    <tr><th id=\"stub_1_14\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Juventus</th>\n<td headers=\"Serie A stub_1_14 avg_ppg\" class=\"gt_row gt_center\">2.21</td>\n<td headers=\"Serie A stub_1_14 pred_ppg\" class=\"gt_row gt_center\">2.12</td>\n<td headers=\"Serie A stub_1_14 pct_diff\" class=\"gt_row gt_center\">4.14%</td></tr>\n    <tr><th id=\"stub_1_15\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Lazio</th>\n<td headers=\"Serie A stub_1_15 avg_ppg\" class=\"gt_row gt_center\">1.72</td>\n<td headers=\"Serie A stub_1_15 pred_ppg\" class=\"gt_row gt_center\">1.67</td>\n<td headers=\"Serie A stub_1_15 pct_diff\" class=\"gt_row gt_center\">3.01%</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" style=\"text-align: left;\" colspan=\"4\">Source: FBref &amp; Transfermarkt Via {worldfootballR}</td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n###### Underperformers\n\n\n\n::: {#tbl-underperformers .cell tbl-cap='The Biggest Underperformers in the Big Five Leagues'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Table Code (Click to Expand)\"}\nperformance_table(slice_min)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"souvogvxgg\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#souvogvxgg table {\n  font-family: Poppins;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#souvogvxgg thead, #souvogvxgg tbody, #souvogvxgg tfoot, #souvogvxgg tr, #souvogvxgg td, #souvogvxgg th {\n  border-style: none;\n}\n\n#souvogvxgg p {\n  margin: 0;\n  padding: 0;\n}\n\n#souvogvxgg .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#souvogvxgg .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#souvogvxgg .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#souvogvxgg .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#souvogvxgg .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#souvogvxgg .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#souvogvxgg .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#souvogvxgg .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#souvogvxgg .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#souvogvxgg .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#souvogvxgg .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#souvogvxgg .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#souvogvxgg .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#souvogvxgg .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#souvogvxgg .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#souvogvxgg .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#souvogvxgg .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#souvogvxgg .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#souvogvxgg .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#souvogvxgg .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#souvogvxgg .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#souvogvxgg .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#souvogvxgg .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#souvogvxgg .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#souvogvxgg .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#souvogvxgg .gt_left {\n  text-align: left;\n}\n\n#souvogvxgg .gt_center {\n  text-align: center;\n}\n\n#souvogvxgg .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#souvogvxgg .gt_font_normal {\n  font-weight: normal;\n}\n\n#souvogvxgg .gt_font_bold {\n  font-weight: bold;\n}\n\n#souvogvxgg .gt_font_italic {\n  font-style: italic;\n}\n\n#souvogvxgg .gt_super {\n  font-size: 65%;\n}\n\n#souvogvxgg .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#souvogvxgg .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#souvogvxgg .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#souvogvxgg .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#souvogvxgg .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#souvogvxgg .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#souvogvxgg .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#souvogvxgg .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#souvogvxgg div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Points Per Game\">\n        <span class=\"gt_column_spanner\">Points Per Game</span>\n      </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"Over/Under\">Over/Under</th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Average\">Average</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Predicted\">Predicted</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Premier League\">Premier League</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Fulham</th>\n<td headers=\"Premier League stub_1_1 avg_ppg\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"Premier League stub_1_1 pred_ppg\" class=\"gt_row gt_center\">1.09</td>\n<td headers=\"Premier League stub_1_1 pct_diff\" class=\"gt_row gt_center\">âˆ’8.43%</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Sunderland</th>\n<td headers=\"Premier League stub_1_2 avg_ppg\" class=\"gt_row gt_center\">0.94</td>\n<td headers=\"Premier League stub_1_2 pred_ppg\" class=\"gt_row gt_center\">1.01</td>\n<td headers=\"Premier League stub_1_2 pct_diff\" class=\"gt_row gt_center\">âˆ’7.29%</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Norwich City</th>\n<td headers=\"Premier League stub_1_3 avg_ppg\" class=\"gt_row gt_center\">0.81</td>\n<td headers=\"Premier League stub_1_3 pred_ppg\" class=\"gt_row gt_center\">0.87</td>\n<td headers=\"Premier League stub_1_3 pct_diff\" class=\"gt_row gt_center\">âˆ’7.23%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"La Liga\">La Liga</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Deportivo de La CoruÃ±a</th>\n<td headers=\"La Liga stub_1_4 avg_ppg\" class=\"gt_row gt_center\">0.93</td>\n<td headers=\"La Liga stub_1_4 pred_ppg\" class=\"gt_row gt_center\">1.01</td>\n<td headers=\"La Liga stub_1_4 pct_diff\" class=\"gt_row gt_center\">âˆ’7.33%</td></tr>\n    <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Valencia</th>\n<td headers=\"La Liga stub_1_5 avg_ppg\" class=\"gt_row gt_center\">1.43</td>\n<td headers=\"La Liga stub_1_5 pred_ppg\" class=\"gt_row gt_center\">1.52</td>\n<td headers=\"La Liga stub_1_5 pct_diff\" class=\"gt_row gt_center\">âˆ’6.20%</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">AlmerÃ­a</th>\n<td headers=\"La Liga stub_1_6 avg_ppg\" class=\"gt_row gt_center\">0.86</td>\n<td headers=\"La Liga stub_1_6 pred_ppg\" class=\"gt_row gt_center\">0.91</td>\n<td headers=\"La Liga stub_1_6 pct_diff\" class=\"gt_row gt_center\">âˆ’5.76%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Ligue 1\">Ligue 1</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Troyes</th>\n<td headers=\"Ligue 1 stub_1_7 avg_ppg\" class=\"gt_row gt_center\">0.79</td>\n<td headers=\"Ligue 1 stub_1_7 pred_ppg\" class=\"gt_row gt_center\">0.87</td>\n<td headers=\"Ligue 1 stub_1_7 pct_diff\" class=\"gt_row gt_center\">âˆ’9.09%</td></tr>\n    <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Toulouse</th>\n<td headers=\"Ligue 1 stub_1_8 avg_ppg\" class=\"gt_row gt_center\">1.11</td>\n<td headers=\"Ligue 1 stub_1_8 pred_ppg\" class=\"gt_row gt_center\">1.17</td>\n<td headers=\"Ligue 1 stub_1_8 pct_diff\" class=\"gt_row gt_center\">âˆ’5.15%</td></tr>\n    <tr><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Metz</th>\n<td headers=\"Ligue 1 stub_1_9 avg_ppg\" class=\"gt_row gt_center\">0.95</td>\n<td headers=\"Ligue 1 stub_1_9 pred_ppg\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"Ligue 1 stub_1_9 pct_diff\" class=\"gt_row gt_center\">âˆ’4.38%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Bundesliga\">Bundesliga</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Schalke</th>\n<td headers=\"Bundesliga stub_1_10 avg_ppg\" class=\"gt_row gt_center\">1.31</td>\n<td headers=\"Bundesliga stub_1_10 pred_ppg\" class=\"gt_row gt_center\">1.41</td>\n<td headers=\"Bundesliga stub_1_10 pct_diff\" class=\"gt_row gt_center\">âˆ’7.11%</td></tr>\n    <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Hannover 96</th>\n<td headers=\"Bundesliga stub_1_11 avg_ppg\" class=\"gt_row gt_center\">1.02</td>\n<td headers=\"Bundesliga stub_1_11 pred_ppg\" class=\"gt_row gt_center\">1.10</td>\n<td headers=\"Bundesliga stub_1_11 pct_diff\" class=\"gt_row gt_center\">âˆ’7.11%</td></tr>\n    <tr><th id=\"stub_1_12\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Hamburger SV</th>\n<td headers=\"Bundesliga stub_1_12 avg_ppg\" class=\"gt_row gt_center\">1.08</td>\n<td headers=\"Bundesliga stub_1_12 pred_ppg\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"Bundesliga stub_1_12 pct_diff\" class=\"gt_row gt_center\">âˆ’5.98%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Serie A\">Serie A</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_13\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Palermo</th>\n<td headers=\"Serie A stub_1_13 avg_ppg\" class=\"gt_row gt_center\">0.96</td>\n<td headers=\"Serie A stub_1_13 pred_ppg\" class=\"gt_row gt_center\">1.02</td>\n<td headers=\"Serie A stub_1_13 pct_diff\" class=\"gt_row gt_center\">âˆ’5.81%</td></tr>\n    <tr><th id=\"stub_1_14\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Parma</th>\n<td headers=\"Serie A stub_1_14 avg_ppg\" class=\"gt_row gt_center\">1.04</td>\n<td headers=\"Serie A stub_1_14 pred_ppg\" class=\"gt_row gt_center\">1.09</td>\n<td headers=\"Serie A stub_1_14 pct_diff\" class=\"gt_row gt_center\">âˆ’4.84%</td></tr>\n    <tr><th id=\"stub_1_15\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Genoa</th>\n<td headers=\"Serie A stub_1_15 avg_ppg\" class=\"gt_row gt_center\">1.10</td>\n<td headers=\"Serie A stub_1_15 pred_ppg\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"Serie A stub_1_15 pct_diff\" class=\"gt_row gt_center\">âˆ’4.37%</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" style=\"text-align: left;\" colspan=\"4\">Source: FBref &amp; Transfermarkt Via {worldfootballR}</td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n:::\n\nThe biggest overperformers across all five leagues are CÃ¡diz (18.8%), Union Berlin (17.96%), and Bastia (12.94%). Interestingly, there is a decent mix of teams in @tbl-overperformers. While the biggest overperformers have been promoted and defied the odds, Manchester City, Juventus, and Bayern Munich show there are a few different ways to beat the model!\n\nOn the other side, the biggest underperformers are a little less dramatic, with Troyes (-9.09%), Fulham (-8.43%), and Deportivo de La CoruÃ±a (-7.33%) edging out the competition to top the table. Unlike @tbl-overperformers, the vast majority of the teams in @tbl-underperformers are expected to struggle in the league but end up underperforming their already low expectations according to their squad values[^Underperformers]. The only exceptions are Valencia and Schalke, who both fell on hard times financially despite being big hitters in their respective leagues.\n\nThe best and worst of the bunch are plotted below to illustrate what the largest over and underperformances look like (though I've selected the two underperformers I found most interesting since it was so close and I'm a real selfish guy).\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nmodels |>\n  filter(outcome == \"Points\") |> \n  tidyr::unnest(c(data, preds)) |> \n  mutate(\n    value = value * mp,\n    preds = round(preds * mp)\n    ) |>  \n  tidyr::pivot_longer(\n    cols = c(value, preds), names_to = \"type\", values_to = \"points\"\n    ) |> \n  mutate(\n    type = \n      case_when(\n        type == \"value\" ~ \"Total Points\",\n        type == \"preds\" ~ \"Predicted Points\",\n        .default = type\n      )\n    ) |> \n  filter(\n    squad %in% c(\n      \"Valencia\", \"Schalke\", \"Union Berlin\", \"CÃ¡diz\"\n      )\n    ) |>\n  ggplot(aes(season, points, group = type, linetype = type)) +\n  geom_smooth(\n    method = lm, formula = y ~ splines::ns(x, 3), \n    linewidth = 0.5, se = FALSE, colour = \"#343a40\"\n    ) +\n  geom_point(aes(fill = type), shape = 21, size = 1.2, stroke = 1) +\n  guides(fill = guide_legend(override.aes = list(size = 2))) + \n  scale_fill_manual(values = c(\"white\", \"#343a40\")) +\n  scale_linetype_manual(values = c(\"dashed\", \"solid\")) +\n  scale_x_discrete(\n    expand = c(0.05, 0.05),\n    breaks = c(\"2013/14\", \"2015/16\", \"2017/18\", \"2019/20\", \"2021/22\", \"2023/24\")\n    ) +\n  facet_wrap(facets = vars(squad), nrow = 2, scales = \"free_x\") +\n  labs(\n    title = \"Significant Over/Underperformers Across the Big Five Leagues\",\n    subtitle = \n      stringr::str_wrap(\n        glue::glue(\n          \"Comparing CÃ¡diz, Schalke, Union Berlin, and Valencia's total and \",\n          \"predicted points in their respective leagues from 2012/13 to \",\n          \"2023/24, conditional on squad market values per season.\"\n          ),\n        width = 95\n      ),\n    x = NULL, y = NULL,\n    caption = \n      \"Visualisation: Paul Johnson | Data: FBref & Transfermarkt Via {worldfootballR}\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/best-and-worst-1.png){fig-alt='A time-series plot visualising CÃ¡diz, Schalke, Union Berlin, and Valencia\\'s\ntotal and predicted points each season from 2012/13 to 2023/24, including a\nfitted line that visualises the trends in predicted and total points. CÃ¡diz\nwere promoted in 2020/21 and overperformed their predicted points every\nseason until being relegated last season, while Union Berlin have had a\nsimilar experience, being promoted in 2019/20 and massively overperforming\nexpectations until a signficant underperformance last season (though they\navoided relegation). Schalke and Valencia, on the other hand, have\nconsistently underperformed while also seeing a significant decline in\ntheir predicted points.\n' width=672}\n:::\n:::\n\n\n\n[^Underperformers]:\n\n    I also checked the numbers for the predicted xG differences and the same trend seems to apply, with the biggest overperformers being a bit of a mix and the \n    underperformers being almost exclusively teams for whom the floor seems to have dropped out during the season.\n\n## Wrapping Up\n\nSeveral thousand words later, we can conclude that the rich stay winning. Don't worry, though. The evidence also shows that success isn't **all** about money. It's possible to overperform expectations, even at the top of the table, and some clubs manage this consistently. Like the rest of the world, football is a meritocracy, after all. If you're rich and stupid, you only consistently finish above everyone else except those who are both rich and not dumb as rocks. It's heartwarming stuff.\n\nI started this blog post wondering whether I was writing a multilevel regression tutorial using football data as an example or an analysis of the money in football using a multilevel model. I still don't know which it is. Maybe this is a Choose Your Own Adventure blog post for nerds? Whichever adventure you chose, I hope you enjoyed it. And if you didn't, please don't write mean things about me on the Internet.\n\nIn the interest of overpromising and underdelivering, I have the lofty goals of a follow-up blog post that recreates some of this and potentially builds on it further, using Bayesian methods. I may build a Bayesian multilevel model that looks at changes in squad value from season to season. It remains to be seen if it will take me two years to finish like this one.\n\n## Acknowledgments {.appendix}\n\nMany thanks to Camilo Alvarez and Adam Ozer for their helpful feedback during the development of this blog post. I greatly appreciate anyone who helps me be just a little less stupid.\n\nPreview image by [Robert Anasch](https://unsplash.com/@diesektion) on [Unsplash](https://unsplash.com/photos/100-banknote-lot-Wnp7qnhHtyw).\n\n## Support {.appendix}\n\nIf you enjoyed this blog post and would like to support my work, you can [buy me a coffee or a beer or give me a tip](https://www.buymeacoffee.com/paulj1989) as a thank you. \n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}