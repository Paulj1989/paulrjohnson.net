{
  "hash": "3c01cac57619316659c9abe077fc9e30",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Testing Transfermarkt's Squad Values\nsubtitle: |\n  Using Bundesliga staff costs to evaluate Transfermarkt's squad values as a\n  proxy for Bundesliga club spending\ndescription-meta: |\n  Using the Bundesliga's financial reports to test Transfermarkt's squad values\n  as a proxy for squad costs.\ndate: 2025-05-07\nimage: ball.webp\nimage-alt: |\n  A Derbystar Bundesliga match ball sitting on the turf of a football pitch.\ncategories: [Football Analytics, Statistics, Machine Learning, R]\nbibliography: references.bib\n---\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Setup Code (Click to Expand)\"}\n# import packages\nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(gt)\n  library(ggplot2)\n  library(tidymodels)\n})\n\n# setup fonts\nsysfonts::font_add_google(\"Poppins\")\nsysfonts::font_add_google(\"Lora\")\nshowtext::showtext_auto()\n\n# set plot theme\n# inspired by https://github.com/z3tt/TidyTuesday/blob/main/R/2020_31_PalmerPenguins.Rmd\ntheme_set(theme_minimal(base_size = 20, base_family = \"Poppins\")) +\n  theme_update(\n    panel.grid.major = element_line(color = \"grey90\", linewidth = .4),\n    panel.grid.minor = element_blank(),\n    panel.spacing.x = unit(.65, units = \"cm\"),\n    panel.spacing.y = unit(.3, units = \"cm\"),\n    axis.title.x = element_text(\n      color = \"grey30\",\n      margin = margin(t = 5),\n      size = rel(1.05)\n    ),\n    axis.title.y = element_text(\n      color = \"grey30\",\n      margin = margin(r = 5),\n      size = rel(1.05)\n    ),\n    axis.text = element_text(color = \"grey50\", size = rel(1)),\n    # axis.text.x = element_text(angle = 30, vjust = 1, hjust = .75),\n    axis.ticks = element_line(color = \"grey90\", linewidth = .4),\n    axis.ticks.length = unit(.2, \"lines\"),\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    legend.text = element_text(size = rel(.9)),\n    legend.box.margin = margin(0, 0, -10, 0),\n    legend.key.width = unit(1, units = \"cm\"),\n    plot.title = element_text(\n      hjust = 0,\n      color = \"black\",\n      family = \"Lora\",\n      size = rel(1.5),\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      hjust = 0,\n      color = \"grey30\",\n      family = \"Lora\",\n      lineheight = 0.5,\n      size = rel(1.1),\n      margin = margin(5, 0, 5, 0)\n    ),\n    plot.title.position = \"plot\",\n    plot.caption = element_text(\n      color = \"grey50\",\n      size = rel(0.8),\n      hjust = 1,\n      margin = margin(10, 0, 0, 0)\n    ),\n    plot.caption.position = \"plot\",\n    plot.margin = margin(rep(10, 4)),\n    strip.text = element_text(size = rel(1), margin = margin(0, 0, 5, 0)),\n    strip.clip = \"off\"\n  )\n\n# set table theme\ntbl_theme <-\n  function(data, width = 100, alignment = \"center\") {\n    data |>\n      tab_source_note(\n        source_note = \"Source: DFL & Transfermarkt Via {worldfootballR}\"\n      ) |>\n      tab_options(\n        footnotes.marks = \"standard\",\n        footnotes.spec_ref = \"^xb\",\n        footnotes.spec_ftr = \"(x)\",\n        table.width = pct(width),\n        table.align = alignment,\n        table.font.names = \"Poppins\"\n      ) |>\n      tab_style(\n        style = cell_text(align = \"left\"),\n        locations = list(cells_source_notes(), cells_footnotes())\n      )\n  }\n\n# load data\nbuli_resources <-\n  readr::read_rds(\n    here::here(\n      \"blog\",\n      \"2025-05-11-testing-transfermarkt-squad-values\",\n      \"data\",\n      \"buli_resources.rds\"\n    )\n  )\n```\n:::\n\n\nLast year, I wrote a [blog post](https://paulrjohnson.net/blog/analysing-money-in-football/) that modelled the effect that money has on outcomes in Europe's five biggest football leagues. The key explanatory variable in my model was Transfermarkt's squad values, which served as a proxy for a club's financial clout. I used a proxy because data capturing a club's investment in their squad, like squad costs[^Costs], is challenging to source. Research shows that Transfermarkt's player market values are strongly associated with transfer fees [@herm2014; @muller2017; @coates2022] and player salaries [@prockl2018]. Considering this, I concluded that Transfermarkt's squad market values were an adequate proxy for squad spending[^Spending]. But what if I was wrong?\n\nA few weeks ago, [Ansgar Wolsing](https://bsky.app/profile/ansgarw.bsky.social) made me aware of the Deutsche Fussball Liga (DFL)'s [published reports](https://www.dfl.de/de/hintergrund/lizenzierungsverfahren/finanzkennzahlen-der-proficlubs/) detailing the annual financial accounts for every club in the Bundesliga (and 2. Bundesliga). Those accounts include each club's spending on \"staff costs\", which is all staff, including the playing squad. Never one to miss an opportunity to make _content_, I went to work and grabbed six seasons of data from 2017/18 to 2022/23. Now, we can determine whether Transfermarkt's squad values are a reasonable proxy for the data I was too lazy to go and find myself. And more importantly, we can find out if I was wrong[^Wrong].\n\n[^Costs]:\n\nThis could be **just** a club's wage spending, or it could be all spending on the squad (wages + transfer fees).\n\n[^Spending]:\n\nWhich is itself effectively a proxy for a club's financial resources, since the assumption is that clubs will spend close to the maximum they can on their squad.\n\n[^Wrong]:\n\nIt is actually illegal to tell me I'm wrong.\n\n## Exploring the Data\n\nThe data is pretty solid, but it comes with some caveats. While most clubs report their staff costs on a seasonal basis, some report staff costs for the financial year. In those cases, the costs don't perfectly align with a single season, but I don't think the change in costs from season to season is significant enough to be a huge concern. I also had to drop Frankfurt's 2022/23 season[^Frankfurt] and Paderborn's 2021/22 season[^Paderborn] from the data.\n\nI'm not too worried that these caveats will cause any significant problems. Although the sample size is relatively small, the data seem sufficient for the question I'm trying to answer here.\n\n[^Frankfurt]:\n\nFrankfurt were one of the teams reporting their costs for the financial year, but in 2023, they switched to reporting costs over a season. To line their reports up, this meant the 2023 report is just the costs for the first six months of 2023 (so that the following season is on the correct schedule).\n\n[^Paderborn]:\n\nThe figures published in 2024 refer to the 2022/23 season, but the reports are organised by division, with all teams in the Bundesliga in the 2024/25 season in one report and the same for the 2. Bundesliga. For the most part, this was just an inconvenience. In 2022/23, however, Paderborn were relegated from the Bundesliga, followed by another relegation down to the 3. Liga in 2023/24. The trouble is, while the top two tiers in Germany are governed by the DFL, the third tier is governed by the DFB. Paderborn's consecutive relegations mean that they aren't included in these reports. It's despicable. The real victim here is me.\n\n### The Value-Cost Gap (Difference)\n\nFirst, it's probably worth comparing the squad values and staff costs directly to understand what we are working with. I will start by capturing the difference between the two and exploring how this figure varies across the dataset.\n\nPlotting the difference between squad values and staff costs below, we see that the gap between the two is sizeable, with squad values usually (but not always) larger.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Helper Function Code (Click to Expand)\"}\nscale_euros <-\n  function(axes = c(\"both\", \"x\", \"y\"), expand = c(0.01, 0)) {\n    scales <- list()\n\n    if (axes[1] %in% c(\"both\", \"x\")) {\n      scales <- append(\n        scales,\n        list(\n          scale_x_continuous(\n            labels = scales::label_number(\n              scale_cut = scales::cut_short_scale(),\n              prefix = \"€\"\n            ),\n            expand = expand\n          )\n        )\n      )\n    }\n\n    if (axes[1] %in% c(\"both\", \"y\")) {\n      scales <- append(\n        scales,\n        list(\n          scale_y_continuous(\n            labels = scales::label_number(\n              scale_cut = scales::cut_short_scale(),\n              prefix = \"€\"\n            ),\n            expand = expand\n          )\n        )\n      )\n    }\n\n    return(scales)\n  }\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nbuli_resources |>\n  mutate(diff = squad_value - staff_cost) |>\n  ggplot(aes(x = diff)) +\n  geom_histogram(color = \"#343a40\", bins = 30) +\n  geom_hline(yintercept = 0, colour = \"#343a40\") +\n  scale_euros(axes = \"x\") +\n  labs(\n    title = \"Difference Squad Value vs. Staff Cost in the Bundesliga\",\n    subtitle = stringr::str_wrap(\n      glue::glue(\n        \"Distribution of differences between club squad values and staff costs \",\n        \"per season in the Bundesliga from 2017/18 to 2022/23.\"\n      ),\n      width = 93\n    ),\n    x = \"Value Difference\\n(Squad Value - Staff Cost)\",\n    y = NULL,\n    caption = \"Visualisation: Paul Johnson | Data: DFL & Transfermarkt via {worldfootballR}\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/difference-distribution-1.png){width=672}\n:::\n:::\n\n\nThe difference between the two isn't an issue. Squad value and staff cost are different things. If squad value and staff cost generally vary together, that will suffice.\n\nIt's also worth considering the team-level variance[^Time]. @tbl-team-difference shows the median difference between squad value and staff cost per season for clubs that have played three or more seasons in the data[^Filter].\n\n\n::: {#tbl-team-difference .cell tbl-cap='Median Difference Squad Values vs. Staff Cost'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Table Code (Click to Expand)\"}\nbuli_resources |>\n  mutate(diff = squad_value - staff_cost) |>\n  add_count(team) |>\n  filter(n >= 3) |>\n  summarise(club_diff = median(diff), .by = team) |>\n  arrange(desc(club_diff)) |>\n  gt(rowname_col = \"team\") |>\n  cols_label(\n    club_diff = md(\"Value Difference<br>(Squad Value - Staff Cost)\")\n  ) |>\n  fmt_currency(\n    columns = club_diff,\n    currency = \"EUR\",\n    suffixing = TRUE,\n    decimals = 1\n  ) |>\n  cols_align(align = \"center\", columns = club_diff) |>\n  tab_style(\n    style = list(cell_fill(color = \"#f8f9fa\")),\n    locations = cells_body(rows = everything())\n  ) |>\n  tbl_theme()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"vlbtnulbiq\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#vlbtnulbiq table {\n  font-family: Poppins;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#vlbtnulbiq thead, #vlbtnulbiq tbody, #vlbtnulbiq tfoot, #vlbtnulbiq tr, #vlbtnulbiq td, #vlbtnulbiq th {\n  border-style: none;\n}\n\n#vlbtnulbiq p {\n  margin: 0;\n  padding: 0;\n}\n\n#vlbtnulbiq .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#vlbtnulbiq .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vlbtnulbiq .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vlbtnulbiq .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vlbtnulbiq .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vlbtnulbiq .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vlbtnulbiq .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vlbtnulbiq .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vlbtnulbiq .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#vlbtnulbiq .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#vlbtnulbiq .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vlbtnulbiq .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vlbtnulbiq .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vlbtnulbiq .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vlbtnulbiq .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vlbtnulbiq .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vlbtnulbiq .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vlbtnulbiq .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#vlbtnulbiq .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vlbtnulbiq .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vlbtnulbiq .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vlbtnulbiq .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vlbtnulbiq .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vlbtnulbiq .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vlbtnulbiq .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vlbtnulbiq .gt_left {\n  text-align: left;\n}\n\n#vlbtnulbiq .gt_center {\n  text-align: center;\n}\n\n#vlbtnulbiq .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vlbtnulbiq .gt_font_normal {\n  font-weight: normal;\n}\n\n#vlbtnulbiq .gt_font_bold {\n  font-weight: bold;\n}\n\n#vlbtnulbiq .gt_font_italic {\n  font-style: italic;\n}\n\n#vlbtnulbiq .gt_super {\n  font-size: 65%;\n}\n\n#vlbtnulbiq .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#vlbtnulbiq .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vlbtnulbiq .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vlbtnulbiq .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vlbtnulbiq .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vlbtnulbiq .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vlbtnulbiq .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#vlbtnulbiq .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#vlbtnulbiq div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"a::stub\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"club_diff\"><span data-qmd-base64=\"VmFsdWUgRGlmZmVyZW5jZTxicj4oU3F1YWQgVmFsdWUgLSBTdGFmZiBDb3N0KQ==\"><span class='gt_from_md'>Value Difference<br>(Squad Value - Staff Cost)</span></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Bayern Munich</th>\n<td headers=\"stub_1_1 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;463.3M</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Borussia Dortmund</th>\n<td headers=\"stub_1_2 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;400.1M</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">RB Leipzig</th>\n<td headers=\"stub_1_3 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;344.1M</td></tr>\n    <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Bayer Leverkusen</th>\n<td headers=\"stub_1_4 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;276.0M</td></tr>\n    <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Borussia Mönchengladbach</th>\n<td headers=\"stub_1_5 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;145.0M</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Hoffenheim</th>\n<td headers=\"stub_1_6 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;139.1M</td></tr>\n    <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Frankfurt</th>\n<td headers=\"stub_1_7 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;125.0M</td></tr>\n    <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Wolfsburg</th>\n<td headers=\"stub_1_8 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;111.5M</td></tr>\n    <tr><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Hertha BSC</th>\n<td headers=\"stub_1_9 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;103.2M</td></tr>\n    <tr><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Schalke</th>\n<td headers=\"stub_1_10 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;97.5M</td></tr>\n    <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Freiburg</th>\n<td headers=\"stub_1_11 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;81.2M</td></tr>\n    <tr><th id=\"stub_1_12\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mainz</th>\n<td headers=\"stub_1_12 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;77.1M</td></tr>\n    <tr><th id=\"stub_1_13\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Stuttgart</th>\n<td headers=\"stub_1_13 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;67.9M</td></tr>\n    <tr><th id=\"stub_1_14\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Augsburg</th>\n<td headers=\"stub_1_14 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;66.7M</td></tr>\n    <tr><th id=\"stub_1_15\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Union Berlin</th>\n<td headers=\"stub_1_15 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;51.9M</td></tr>\n    <tr><th id=\"stub_1_16\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Werder Bremen</th>\n<td headers=\"stub_1_16 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;48.8M</td></tr>\n    <tr><th id=\"stub_1_17\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Köln</th>\n<td headers=\"stub_1_17 club_diff\" class=\"gt_row gt_center\" style=\"background-color: #F8F9FA;\">&#8364;28.3M</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" style=\"text-align: left;\" colspan=\"2\">Source: DFL &amp; Transfermarkt Via {worldfootballR}</td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nLooking at @tbl-team-difference, it is obvious that the differences are at least partially a function of the team's quality or the resources available to teams. This probably identifies an issue with Transfermarkt's values. Squad values are updated regularly and will be responsive to player (and team) performances. Good teams play better, leading to better teams seeing their values increase.\n\nAnother explanation could be that this is just a product of scales. The squad values are generally larger than the staff costs, but perhaps they are a certain percentage higher, on average, and for teams with higher staff costs, that's inherently going to mean a bigger difference.\n\n[^Time]:\n\nI also looked at variance over time. The difference doesn't appear to change much from season to season, with perhaps the exception being 2017/18. I think it's reasonable to assume there is not a significant temporal component going on here.\n\n[^Filter]:\n\nMy main reason for filtering the data this way was to reduce the list of clubs included and make the table a little smaller. It also removes the noisiest observations (though all are obviously small samples since the maximum seasons are just six).\n\n### When Value Meets Reality (Correlation)\n\nIf the differences between squad values and staff costs are a mixed bag, the correlation between the two paints a clearer picture. There is a **0.94** correlation between squad values and staff costs, which is pretty remarkable.\n\nWhen we visualise the association between the two below, it further illustrates how closely tied they are.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nbuli_resources |>\n  ggplot(aes(x = staff_cost, y = squad_value)) +\n  geom_point(alpha = 0.5, size = 2, colour = \"#343a40\") +\n  geom_smooth(\n    method = lm,\n    colour = \"#026E99\",\n    # fill = \"#026E99\",\n    linewidth = 1.2,\n    alpha = 0.15\n  ) +\n  scale_euros() +\n  labs(\n    title = \"Staff Costs vs. Squad Market Values in the Bundesliga\",\n    subtitle = stringr::str_wrap(\n      glue::glue(\n        \"Relationship between staff costs and squad values in the Bundesliga \",\n        \"from 2017/18 - 2022/23.\"\n      ),\n      width = 93\n    ),\n    x = \"Staff Cost\",\n    y = \"Squad Value\",\n    caption = \"Visualisation: Paul Johnson | Data: DFL & Transfermarkt Via {worldfootballR}\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/costs-by-value-1.png){width=672}\n:::\n:::\n\n\nThe relationship between staff costs and squad values is incredibly clean. It is clearly linear, and any variance is only minimal.\n\nThere doesn't appear to be anything particularly systematic about the variance. Squad values are undervalued at the lower end of staff costs, but the reverse is true, as it increases. At the top end of staff costs, the squad values are all slightly undervalued.\n\nSquad values seem to be an excellent approximation of staff costs.\n\n## Comparing Predictive Performance\n\nThe final test of squad values as an appropriate proxy for staff costs is to compare their predictive performance.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot Code (Click to Expand)\"}\nbuli_resources |>\n  tidyr::pivot_longer(\n    cols = c(pts, xgd, gd),\n    names_to = \"outcome\",\n    values_to = \"outcome_value\"\n  ) |>\n  tidyr::pivot_longer(\n    cols = c(squad_value, staff_cost),\n    names_to = \"metric\",\n    values_to = \"metric_value\"\n  ) |>\n  mutate(\n    outcome = case_when(\n      outcome == \"pts\" ~ \"Points\",\n      outcome == \"gd\" ~ \"Goal Difference\",\n      outcome == \"xgd\" ~ \"xG Difference\",\n      .default = outcome\n    ),\n    metric = if_else(metric == \"squad_value\", \"Squad Value\", \"Staff Cost\")\n  ) |>\n  ggplot(aes(x = metric_value, y = outcome_value)) +\n  geom_point(alpha = 0.5, size = 1.2, color = \"#343a40\") +\n  geom_smooth(\n    method = lm,\n    formula = y ~ log(x),\n    colour = \"#026E99\",\n    # fill = \"#026E99\",\n    se = TRUE,\n    linewidth = 1,\n    alpha = 0.2\n  ) +\n  facet_grid(\n    rows = vars(outcome),\n    cols = vars(metric),\n    scales = \"free\",\n    switch = \"y\"\n  ) +\n  scale_euros(axes = \"x\") +\n  labs(\n    title = \"Bundesliga Outcomes vs. Squad Value & Staff Cost\",\n    subtitle = stringr::str_wrap(\n      glue::glue(\n        \"Impact of squad values and staff costs on performance metrics and \",\n        \"outcomes —— points, goal difference, and xG difference —— in the \",\n        \"Bundesliga across the 2017/18 - 2022/23 seasons.\"\n      ),\n      width = 93\n    ),\n    x = NULL,\n    y = NULL,\n    caption = \"Visualisation: Paul Johnson | Data: DFL & Transfermarkt Via {worldfootballR}\"\n  ) +\n  theme(\n    panel.spacing = unit(1, \"lines\"),\n    strip.placement = \"outside\",\n    # panel.spacing.x = unit(.3, units = \"cm\"),\n    axis.text.x = element_text(angle = 30, vjust = 1, hjust = 0.8)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/outcome-diffs-1.png){width=672}\n:::\n:::\n\n\n### XGBoost Models\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Helper Functions Code (Click to Expand)\"}\n# preprocessing function\npreprocess_data <- function(recipe_obj) {\n  recipe_obj |>\n    step_log(any_of(c(\"squad_value\", \"staff_cost\"))) |>\n    step_novel(all_nominal_predictors()) |>\n    step_dummy(all_nominal_predictors()) |>\n    step_zv()\n}\n\n# target/predictor combination recipes function\ncreate_recipes <- function(targets, predictors) {\n  combos <- tidyr::crossing(target = targets, predictor = predictors)\n\n  # set seed\n  furrr_opts <- furrr::furrr_options(seed = 42)\n\n  # create recipe list\n  recipes <- furrr::future_pmap(\n    combos,\n    function(target, predictor) {\n      recipe(\n        formula = as.formula(glue::glue(\n          \"{target} ~ {predictor} + season + team\"\n        )),\n        data = train\n      ) |>\n        preprocess_data()\n    },\n    .options = furrr_opts\n  )\n\n  # name list elements\n  names(recipes) <-\n    furrr::future_pmap_chr(\n      combos,\n      ~ glue::glue(\"{..1}_{..2}\"),\n      .options = furrr_opts\n    )\n\n  recipes\n}\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Model Code (Click to Expand)\"}\n# set seed for reproducibility\nset.seed(42)\n\n# set up parallel backend\nfuture::plan(future::multisession, workers = parallel::detectCores() - 1)\n\n# split train/test data and specify folds\nsplits <- initial_split(buli_resources, prop = 0.7)\ntrain <- training(splits)\ntest <- testing(splits)\nfolds <- vfold_cv(train, v = 10, repeats = 5)\n\n# generate recipes\nrecipes <- create_recipes(\n  targets = c(\"pts\", \"gd\", \"xgd\"),\n  predictors = c(\"squad_value\", \"staff_cost\")\n)\n\n# xgboost model spec (with tuning)\nxgb_spec <- boost_tree(\n  trees = 1200,\n  learn_rate = 0.005,\n  tree_depth = tune(),\n  loss_reduction = tune(),\n  sample_size = tune(),\n  stop_iter = tune()\n) |>\n  set_engine(\"xgboost\") |>\n  set_mode(\"regression\")\n\n# workflow set from recipes and model\nwf_sets <- workflow_set(\n  preproc = recipes,\n  models = list(xgb = xgb_spec)\n)\n\n# tuning control\nctrl <- finetune::control_sim_anneal(\n  save_pred = TRUE,\n  parallel_over = \"everything\",\n  save_workflow = TRUE,\n  verbose = TRUE\n)\n\n# tune all workflows\ntuned_results <- workflow_map(\n  wf_sets,\n  fn = \"tune_sim_anneal\",\n  control = ctrl,\n  metrics = metric_set(rmse, rsq),\n  resamples = folds,\n  seed = 42\n)\n\n# stop future plan\nfuture::plan(future::sequential)\n```\n:::\n\n\nI won't bother walking through the code to fit the models since that isn't the focus of this post. Still, I've fit and tuned XGBoost models for the outcomes I used in my original model—points, goal difference, and xG difference—with squad values or staff costs, plus season and team, included as features. In total, this results in six different models.\n\nThe goal isn't to go to great lengths to fit perfect models. I've done a little tuning just for the hell of it[^Fit], but the focus is on comparing the performance of the squad value and staff cost models.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Helper Functions Code (Click to Expand)\"}\n# select the best parameters\nselect_best_model <- function(results, model_id) {\n  results |>\n    extract_workflow_set_result(model_id) |>\n    select_best(metric = \"rmse\")\n}\n\n# finalize and refit on full training data\nfinalize_and_fit_model <- function(results, model_id, data_split) {\n  best_params <- select_best_model(results, model_id)\n\n  results |>\n    extract_workflow(model_id) |>\n    finalize_workflow(best_params) |>\n    last_fit(split = data_split, metrics = metric_set(rmse, rsq))\n}\n\n# extract test performance metrics\nget_test_metrics <- function(results, model_id, data_split) {\n  finalize_and_fit_model(results, model_id, data_split) |>\n    collect_metrics()\n}\n```\n:::\n\n\n\n\n\n::: {#tbl-model-performance .cell tbl-cap='Predictive Performance of Squad Values & Staff Costs'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Table Code (Click to Expand)\"}\n# get test performance for all models\nsummary_table <-\n  tuned_results |>\n  mutate(\n    test_metrics = map(wflow_id, ~ get_test_metrics(tuned_results, .x, splits)),\n    feature_set = if_else(\n      stringr::str_detect(wflow_id, \"_squad\"),\n      \"Squad Value\",\n      \"Staff Costs\"\n    ),\n    outcome = case_when(\n      stringr::str_starts(wflow_id, \"pts\") ~ \"Points\",\n      stringr::str_starts(wflow_id, \"gd\") ~ \"Goal Difference\",\n      stringr::str_starts(wflow_id, \"xgd\") ~ \"xG Difference\"\n    ),\n    outcome = forcats::fct(\n      outcome,\n      levels = c(\"Points\", \"Goal Difference\", \"xG Difference\")\n    )\n  ) |>\n  arrange(outcome) |>\n  unnest(test_metrics) |>\n  pivot_wider(names_from = .metric, values_from = .estimate) |>\n  select(feature_set, outcome, rmse, rsq)\n\n# display metrics table\nsummary_table |>\n  gt(groupname_col = \"feature_set\", rowname_col = \"outcome\") |>\n  cols_label(\n    rmse = \"RMSE\",\n    rsq = html(\"R<sup>2</sup>\")\n  ) |>\n  fmt_number(\n    columns = c(rmse, rsq),\n    decimals = 2,\n    drop_trailing_zeros = TRUE\n  ) |>\n  cols_align(align = \"left\", columns = outcome) |>\n  cols_align(align = \"center\", columns = c(rmse, rsq)) |>\n  tab_spanner(label = \"Evaluation Metrics\", columns = c(rmse, rsq)) |>\n  tab_style(\n    style = list(cell_text(weight = \"bold\")),\n    locations = cells_column_spanners()\n  ) |>\n  tab_style(\n    style = list(cell_text(weight = \"bold\")),\n    locations = cells_row_groups()\n  ) |>\n  tbl_theme()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"wcraectzbm\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#wcraectzbm table {\n  font-family: Poppins;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#wcraectzbm thead, #wcraectzbm tbody, #wcraectzbm tfoot, #wcraectzbm tr, #wcraectzbm td, #wcraectzbm th {\n  border-style: none;\n}\n\n#wcraectzbm p {\n  margin: 0;\n  padding: 0;\n}\n\n#wcraectzbm .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#wcraectzbm .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#wcraectzbm .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#wcraectzbm .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#wcraectzbm .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#wcraectzbm .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#wcraectzbm .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#wcraectzbm .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#wcraectzbm .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#wcraectzbm .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#wcraectzbm .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#wcraectzbm .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#wcraectzbm .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#wcraectzbm .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#wcraectzbm .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wcraectzbm .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#wcraectzbm .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#wcraectzbm .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#wcraectzbm .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wcraectzbm .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#wcraectzbm .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wcraectzbm .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#wcraectzbm .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wcraectzbm .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#wcraectzbm .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wcraectzbm .gt_left {\n  text-align: left;\n}\n\n#wcraectzbm .gt_center {\n  text-align: center;\n}\n\n#wcraectzbm .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#wcraectzbm .gt_font_normal {\n  font-weight: normal;\n}\n\n#wcraectzbm .gt_font_bold {\n  font-weight: bold;\n}\n\n#wcraectzbm .gt_font_italic {\n  font-style: italic;\n}\n\n#wcraectzbm .gt_super {\n  font-size: 65%;\n}\n\n#wcraectzbm .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#wcraectzbm .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#wcraectzbm .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#wcraectzbm .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#wcraectzbm .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#wcraectzbm .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#wcraectzbm .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#wcraectzbm .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#wcraectzbm div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"a::stub\"></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Evaluation Metrics\">\n        <div class=\"gt_column_spanner\">Evaluation Metrics</div>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"rmse\">RMSE</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"rsq\">R<sup>2</sup></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Squad Value\">Squad Value</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Points</th>\n<td headers=\"Squad Value stub_1_1 rmse\" class=\"gt_row gt_center\">0.24</td>\n<td headers=\"Squad Value stub_1_1 rsq\" class=\"gt_row gt_center\">0.65</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Goal Difference</th>\n<td headers=\"Squad Value stub_1_2 rmse\" class=\"gt_row gt_center\">0.4</td>\n<td headers=\"Squad Value stub_1_2 rsq\" class=\"gt_row gt_center\">0.65</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">xG Difference</th>\n<td headers=\"Squad Value stub_1_3 rmse\" class=\"gt_row gt_center\">0.31</td>\n<td headers=\"Squad Value stub_1_3 rsq\" class=\"gt_row gt_center\">0.58</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Staff Costs\">Staff Costs</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Points</th>\n<td headers=\"Staff Costs stub_1_4 rmse\" class=\"gt_row gt_center\">0.3</td>\n<td headers=\"Staff Costs stub_1_4 rsq\" class=\"gt_row gt_center\">0.47</td></tr>\n    <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Goal Difference</th>\n<td headers=\"Staff Costs stub_1_5 rmse\" class=\"gt_row gt_center\">0.49</td>\n<td headers=\"Staff Costs stub_1_5 rsq\" class=\"gt_row gt_center\">0.47</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">xG Difference</th>\n<td headers=\"Staff Costs stub_1_6 rmse\" class=\"gt_row gt_center\">0.36</td>\n<td headers=\"Staff Costs stub_1_6 rsq\" class=\"gt_row gt_center\">0.44</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" style=\"text-align: left;\" colspan=\"3\">Source: DFL &amp; Transfermarkt Via {worldfootballR}</td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nThese results broadly demonstrate how well-aligned staff costs and squad values are, but the fact that squad values consistently outperform staff costs is interesting. The squad values models have marginally better root mean squared errors (RMSEs), but they significantly outperform the staff cost models according to R<sup>2</sup>.\n\nIt's worth noting that the models are tuned on RMSE, so the variance in R<sup>2</sup> is perhaps a function of this. What is most important is that the performance is generally only a little better, according to the metric being tuned.\n\nI think it is reasonable to assume that squad values consistently beat staff costs because some performance bias is being baked in, but the fact that the performance is only slightly improved is a good sign.\n\n[^Fit]:\n\nI used this post as an excuse to play around with [**future**](https://future.futureverse.org) and [**furrr**](https://furrr.futureverse.org), so I ended up going to greater lengths to tune the models, but only as a way to make better use of parallel processing.\n\n## How Reliable are Squad Values?\n\nThere is very little difference between the two, and while it does seem like squad values are a little biased by performance, I don't think it makes such a difference that it's a big problem. However, it's something to be aware of if using them as a proxy for squad costs.\n\nIt's also worth noting that I'm using a small sample of data limited only to the Bundesliga, which reduces how much we can infer from this. Evidence shows that player values vary in predictive value by league [@muller2017; @coates2022], so the findings here should be understood within their limited scope.\n\nStill, I think the results support the idea that Transfermarkt's squad values are a valuable proxy for squad spending.\n\n## Acknowledgments {.appendix}\n\nPreview image by [Tobias Rehbein](https://unsplash.com/@tobiasrehbein) on [Unsplash](https://unsplash.com/photos/a-soccer-ball-sitting-on-top-of-a-lush-green-field-CZ_HwDtvEus).\n\n## Support {.appendix}\n\nIf you enjoyed this blog post and would like to support my work, you can [buy me a coffee or a beer or give me a tip](https://www.buymeacoffee.com/paulj1989) as a thank you.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}